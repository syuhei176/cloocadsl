-- phpMyAdmin SQL Dump
-- version 3.4.5
-- http://www.phpmyadmin.net
--
-- ホスト: localhost
-- 生成時間: 2012 年 5 月 07 日 14:30
-- サーバのバージョン: 5.5.16
-- PHP のバージョン: 5.3.8

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- データベース: `cloocadsl`
--

-- --------------------------------------------------------

--
-- テーブルの構造 `GraphicInfo`
--

DROP TABLE IF EXISTS `GraphicInfo`;
CREATE TABLE IF NOT EXISTS `GraphicInfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `visibillity` int(1) NOT NULL,
  `shape` tinytext NOT NULL,
  `default_color` varchar(16) NOT NULL DEFAULT 'white',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- テーブルの構造 `GroupInfo`
--

DROP TABLE IF EXISTS `GroupInfo`;
CREATE TABLE IF NOT EXISTS `GroupInfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(32) NOT NULL,
  `detail` tinytext NOT NULL,
  `visibillity` int(1) NOT NULL,
  `service` varchar(8) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=6 ;

--
-- テーブルのデータをダンプしています `GroupInfo`
--

INSERT INTO `GroupInfo` (`id`, `name`, `detail`, `visibillity`, `service`) VALUES
(1, 'ä¿¡å·žå¤§å­¦', 'ä¿¡å·žå¤§å­¦å·¥å­¦éƒ¨ã®æŽˆæ¥­ã‚°ãƒ«ãƒ¼ãƒ—', 2, 'shinshu'),
(3, 'ãƒžã‚¤ãƒ€ãƒƒã‚·ãƒ¥ãƒœãƒ¼ãƒ‰', 'ã‚ãªãŸã®ãƒ€ãƒƒã‚·ãƒ¥ãƒœãƒ¼ãƒ‰ã§ã™ã€‚', 1, 'all'),
(4, 'ä¹å·žå¤§å­¦ã‚³ã‚¢ã‚»ãƒŸãƒŠãƒ¼', 'ä¹å·žå¤§å­¦ã®ã‚³ã‚¢ã‚»ãƒŸãƒŠãƒ¼ç”¨', 2, 'shinshu'),
(5, 'test_group1', '', 1, 'all');

-- --------------------------------------------------------

--
-- テーブルの構造 `hasMetaModel`
--

DROP TABLE IF EXISTS `hasMetaModel`;
CREATE TABLE IF NOT EXISTS `hasMetaModel` (
  `user_id` int(11) NOT NULL,
  `metamodel_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- テーブルのデータをダンプしています `hasMetaModel`
--

INSERT INTO `hasMetaModel` (`user_id`, `metamodel_id`) VALUES
(1, 6),
(1, 7),
(1, 8),
(1, 9),
(1, 10),
(1, 11),
(1, 12),
(1, 14),
(1, 15),
(7, 16),
(11, 17),
(1, 18),
(1, 19);

-- --------------------------------------------------------

--
-- テーブルの構造 `hasProject`
--

DROP TABLE IF EXISTS `hasProject`;
CREATE TABLE IF NOT EXISTS `hasProject` (
  `user_id` int(11) NOT NULL,
  `project_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- テーブルのデータをダンプしています `hasProject`
--

INSERT INTO `hasProject` (`user_id`, `project_id`) VALUES
(2, 5),
(1, 10),
(1, 12),
(1, 14),
(1, 15),
(1, 16),
(1, 17),
(1, 18),
(1, 20),
(1, 21),
(1, 22),
(1, 23),
(1, 24),
(1, 26),
(1, 28),
(1, 29),
(1, 30),
(1, 31),
(9, 32),
(9, 33),
(7, 34),
(1, 35),
(12, 36),
(12, 37),
(1, 39),
(1, 40),
(1, 41),
(1, 42),
(1, 43),
(1, 44),
(1, 49),
(1, 50),
(1, 51),
(1, 52),
(1, 53);

-- --------------------------------------------------------

--
-- テーブルの構造 `hasTool`
--

DROP TABLE IF EXISTS `hasTool`;
CREATE TABLE IF NOT EXISTS `hasTool` (
  `user_id` int(11) NOT NULL,
  `tool_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- テーブルの構造 `JoinInfo`
--

DROP TABLE IF EXISTS `JoinInfo`;
CREATE TABLE IF NOT EXISTS `JoinInfo` (
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  `role` int(1) NOT NULL,
  KEY `user_id` (`user_id`,`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- テーブルのデータをダンプしています `JoinInfo`
--

INSERT INTO `JoinInfo` (`user_id`, `group_id`, `role`) VALUES
(1, 1, 1),
(7, 1, 1),
(1, 3, 1),
(1, 4, 1),
(9, 4, 0),
(10, 4, 0),
(10, 3, 0),
(9, 1, 0),
(9, 1, 0),
(9, 3, 0),
(11, 5, 1),
(12, 5, 0);

-- --------------------------------------------------------

--
-- テーブルの構造 `MetaModelInfo`
--

DROP TABLE IF EXISTS `MetaModelInfo`;
CREATE TABLE IF NOT EXISTS `MetaModelInfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` tinytext CHARACTER SET utf8 NOT NULL,
  `xml` mediumtext NOT NULL,
  `visibillity` int(1) NOT NULL DEFAULT '0',
  `template` mediumtext NOT NULL,
  `group_id` int(11) NOT NULL DEFAULT '1',
  `welcome_message` text NOT NULL,
  `targets` tinytext NOT NULL,
  `sample` mediumtext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=20 ;

--
-- テーブルのデータをダンプしています `MetaModelInfo`
--

INSERT INTO `MetaModelInfo` (`id`, `name`, `xml`, `visibillity`, `template`, `group_id`, `welcome_message`, `targets`, `sample`) VALUES
(6, 'json', '{"id":6,"name":"json","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"state","properties":[1],"graphic":1},{"classname":"MetaObject","id":2,"name":"start","properties":[]},{"classname":"MetaObject","id":3,"name":"class","properties":[3],"decomposition":2,"resizable":true}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"transition","properties":[2],"bindings":[],"arrow_type":"TRIANGLE"}],"metaproperties":[null,{"id":1,"name":"action","data_type":"String","widget":"fixed list","exfield":"stop&go"},{"id":2,"name":"event","data_type":"String","widget":"fixed list","exfield":"none&touch&white&black"},{"id":3,"name":"name","data_type":"String","widget":"fixed list","exfield":"Linetracer&Controller"}],"metadiagrams":[null,{"id":1,"name":"classdiagram","metaobjects":[3],"metarelations":[]},{"id":2,"name":"statediagram","metaobjects":[1,2],"metarelations":[1]}],"graphics":{"1":{"type":"polygon","option":{"strokeStyle":"black","strokeWidth":4,"x":0,"y":0,"radius":50,"sides":3}}}}', 1, '<?xml version="1.0" encoding="utf-8"?><DirTemp><TemplateForDiagram src="controller.mako" dest="t1.js" diagram="2"></TemplateForDiagram></DirTemp>', 3, 'welcome', '', ''),
(7, 'json2', ' {"id":6,"name":"json","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"state","properties":[1,2]},{"classname":"MetaObject","id":2,"name":"start","properties":[]}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"transition","properties":[3],"bindings":[],"arrow_type":"none"}],"metaproperties":[null,{"id":1,"name":"name","data_type":"collection_String","widget":"input field","exfield":""},{"id":2,"name":"action","data_type":"String","widget":"fixed list","exfield":"stop&go"},{"id":3,"name":"action","data_type":"String","widget":"input field","exfield":""}],"metadiagrams":[null,{"id":1,"name":"json","metaobjects":[1,2],"metarelations":[1]}]}', 1, '', 3, 'welcome', '', ''),
(8, 'ä¿¡å·žå¤§å­¦ã€€èª²é¡Œï¼‘', '{"id":6,"name":"json","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"state","properties":[1],"graphic":"rounded"},{"classname":"MetaObject","id":2,"name":"start","properties":[],"graphic":"circle"},{"classname":"MetaObject","id":3,"name":"class","properties":[3],"graphic":"rect","decomposition":2}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"transition","properties":[2],"bindings":[],"arrow_type":"v"}],"metaproperties":[null,{"id":1,"name":"action","data_type":"String","widget":"fixed list","exfield":[{"disp":"åœæ­¢","value":"stop"},{"disp":"å‰é€²","value":"go"}]},{"id":2,"name":"event","data_type":"String","widget":"fixed list","exfield":[{"disp":"åœæ­¢","value":"stop"},{"disp":"å‰é€²","value":"go"}]}],"metadiagrams":[null,{"id":1,"name":"statediagram","metaobjects":[1,2],"metarelations":[1]}]}', 0, '<?xml version="1.0" encoding="utf-8"?><DirTemp>\n<TemplateForDiagram src="state.h.mako" dest="c_$id.h" diagram="1"></TemplateForDiagram>\n<TemplateForDiagram src="state.cpp.mako" dest="c_$id.cpp" diagram="1"></TemplateForDiagram>\n<Template src="main.h.mako" dest="main.h" />\n<Template src="Makefile.mako" dest="Makefile" />\n<Copy src="EventManager.h" dest="EventManager.h" />\n<Copy src="main.cpp" dest="main.cpp" />\n<Copy src="StateMachine.h" dest="StateMachine.h" />\n<Copy src="mdlnxtproj.h" dest="mdlnxtproj.h" />\n<Copy src="mdlnxtproj.cfg" dest="mdlnxtproj.cfg" />\n</DirTemp>', 1, 'welcome<br>\nwelcome<br>\nwelcome<br>\nwelcome<br>\nwelcome<br>', '', ''),
(9, 'classdiagram', '{"id":9,"name":"uml","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"class","properties":[1,2,3],"graphic":"rect"}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"association","properties":[1],"bindings":[],"arrow_type":"v"}],"metaproperties":[null,{"id":1,"name":"name","data_type":"String","widget":"input field","exfield":""},{"id":2,"name":"attribute","data_type":"collection_String","widget":"input field","exfield":""},{"id":3,"name":"operation","data_type":"collection_String","widget":"input field","exfield":""}],"metadiagrams":[null,{"id":1,"name":"classdiagram","metaobjects":[1],"metarelations":[1]}],"metadiagram":1}', 1, '', 3, 'welcome', '', '{"id":1,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[1],"relationships":[],"ve":{"version":1,"ver_type":"add"}},"2":{"id":2,"meta_id":1,"objects":[2],"relationships":[],"ve":{"version":1,"ver_type":"add"}}},"objects":{"1":{"meta_id":1,"id":1,"bound":{"x":107.19999694824219,"y":91.39999771118164,"width":42,"height":70},"properties":[{"meta_id":1,"children":[1]},{"meta_id":2,"children":[2]},{"meta_id":3,"children":[3]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}},"2":{"meta_id":1,"id":2,"bound":{"x":267.1999969482422,"y":91.4000015258789,"width":50,"height":50},"properties":[{"meta_id":1,"children":[4]},{"meta_id":2,"children":[]},{"meta_id":3,"children":[]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}}},"properties":{"1":{"id":1,"meta_id":1,"value":"aaa","ve":{"version":1,"ver_type":"add"}},"2":{"id":2,"meta_id":2,"value":"aaa","ve":{"version":1,"ver_type":"add"}},"3":{"id":3,"meta_id":3,"value":"bbb","ve":{"version":1,"ver_type":"add"}},"4":{"id":4,"meta_id":1,"ve":{"version":1,"ver_type":"add"}}},"relationships":{}}'),
(10, 'core', '{"id":6,"name":"json","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"state","properties":[1],"graphic":"rounded"},{"classname":"MetaObject","id":2,"name":"start","properties":[],"graphic":"circle"},{"classname":"MetaObject","id":3,"name":"klass","properties":[3],"graphic":"rect","decomposition":2},{"classname":"MetaObject","id":4,"name":"send_event_state","properties":[4],"graphic":"rounded"}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"transition","properties":[2],"bindings":[],"arrow_type":"v"}],"metaproperties":[null,{"id":1,"name":"action","data_type":"String","widget":"fixed list","exfield":"stop&go&userdefine1&userdefine2"},{"id":2,"name":"event","data_type":"String","widget":"fixed list","exfield":"none&touch&white&black&userdefine1&userdefine2"},{"id":3,"name":"classname","data_type":"String","widget":"fixed list","exfield":"Controller&Linetracer"},{"id":4,"name":"send","data_type":"String","widget":"fixed list","exfield":"userdefine1&userdefine2"}],"metadiagrams":[null,{"id":1,"name":"classdiagram","metaobjects":[3],"metarelations":[]},{"id":2,"name":"statediagram","metaobjects":[1,2,4],"metarelations":[1]}]}', 0, '<?xml version="1.0" encoding="utf-8"?><DirTemp>\n<Template src="main.h.mako" dest="main.h" />\n<TemplateForDiagram src="state.h.mako" dest="c_$id.h" diagram="2"></TemplateForDiagram>\n<TemplateForDiagram src="state.cpp.mako" dest="c_$id.cpp" diagram="2"></TemplateForDiagram>\n<Template src="Makefile.mako" dest="Makefile" />\n<Copy src="EventManager.h" dest="EventManager.h" />\n<Copy src="main.cpp" dest="main.cpp" />\n<Copy src="StateMachine.h" dest="StateMachine.h" />\n<Copy src="mdlnxtproj.h" dest="mdlnxtproj.h" />\n<Copy src="mdlnxtproj.cfg" dest="mdlnxtproj.cfg" />\n</DirTemp>', 3, 'welcomek', '', ''),
(11, 'kadai1', '{"id":9,"name":"uml","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"class","properties":[1,2,3],"graphic":"rect"}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"association","properties":[1],"bindings":[],"arrow_type":"v"}],"metaproperties":[null,{"id":1,"name":"name","data_type":"String","widget":"input field","exfield":""},{"id":2,"name":"attribute","data_type":"collection_String","widget":"input field","exfield":""},{"id":3,"name":"operation","data_type":"collection_String","widget":"input field","exfield":""}],"metadiagrams":[null,{"id":1,"name":"classdiagram","metaobjects":[1],"metarelations":[1]}],"metadiagram":1}', 0, '', 4, '', '', '{"id":1,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"objects":[],"relationships":[],"ve":{"version":1,"ver_type":"add"}}},"objects":{},"properties":{},"relationships":{}}'),
(12, 'kadai2', '{"metadiagrams":[],"metaobjects":[],"metarelations":[],"metaproperties":[]}', 0, '', 4, '', '', ''),
(14, 'ä¿¡å·žå¤§å­¦', '{"metadiagrams":[],"metaobjects":[],"metarelations":[],"metaproperties":[]}', 0, '', 1, '', '', ''),
(15, 'test', ' ', 1, '', 4, '', '', ''),
(16, 'test', ' ', 1, '', 1, '', '', ''),
(17, 'test_metamodel1', ' ', 1, '', 5, '', '', ''),
(18, 'uml(åˆ†æž)', '{"id":18,"name":"uml","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"usecase","properties":[1],"graphic":"rounded"},{"classname":"MetaObject","id":2,"name":"system","properties":[],"graphic":"rect","resizable":true},{"classname":"MetaObject","id":3,"name":"lifeline","properties":[1],"graphic":"rect"},{"classname":"MetaObject","id":4,"name":"usecase","properties":[5],"graphic":"rounded"},{"classname":"MetaObject","id":5,"name":"actor","properties":[],"graphic":1,"resizable":true}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"association","properties":[1],"bindings":[],"arrow_type":"v"},{"classname":"MetaRelation","id":2,"name":"signal1","properties":[4],"bindings":[],"arrow_type":"v"},{"classname":"MetaRelation","id":3,"name":"signal2","properties":[4],"bindings":[],"arrow_type":"v"},{"classname":"MetaRelation","id":4,"name":"role","properties":[6],"bindings":[],"arrow_type":"v"}],"metaproperties":[null,{"id":1,"name":"name","data_type":"string","widget":"input field","exfield":""},{"id":2,"name":"attribute","data_type":"collection_String","widget":"input field","exfield":""},{"id":3,"name":"operation","data_type":"collection_String","widget":"input field","exfield":""},{"id":4,"name":"order","data_type":"Number","widget":"input field","exfield":""},{"id":5,"name":"usecase","data_type":"string","widget":"input field","exfield":""},{"id":6,"name":"asso_type","data_type":"string","widget":"fixed list","exfield":[{"disp":" ","value":"none"},{"disp":"extends","value":"extends"},{"disp":"includes","value":"includes"}]},{"id":7,"name":"","data_type":"String","widget":"input field","exfield":""}],"metadiagrams":[null,{"id":1,"name":"activity diagram","metaobjects":[1,2],"metarelations":[1],"properties":[1],"instance_name":0},{"id":2,"name":"sequence diagram","metaobjects":[3],"metarelations":[2,3],"properties":[1],"instance_name":0},{"id":3,"name":"usecase diagram","metaobjects":[4,5],"metarelations":[4],"properties":[1],"instance_name":0}],"graphics":{"1":{"type":"lines","option":{"strokeStyle":"black","strokeWidth":2,"x1":0,"y1":0,"x2":10,"y2":-10,"x3":0,"y3":-20,"x4":-10,"y4":-10,"x5":0,"y5":0,"x6":0,"y6":30}}},"metadiagram":1}', 1, '', 3, 'åˆ†æžæ®µéšŽã®UMLã‚’æ›¸ãã“ã¨', '["nxt"]', ''),
(19, 'a', '{"id":9,"name":"uml","metaobjects":[null,{"classname":"MetaObject","id":1,"name":"class","properties":[1,2,3],"graphic":"rect"}],"metarelations":[null,{"classname":"MetaRelation","id":1,"name":"association","properties":[1],"bindings":[],"arrow_type":"v"}],"metaproperties":[null,{"id":1,"name":"name","data_type":"String","widget":"input field","exfield":""},{"id":2,"name":"attribute","data_type":"collection_String","widget":"input field","exfield":""},{"id":3,"name":"operation","data_type":"collection_String","widget":"input field","exfield":""}],"metadiagrams":[null,{"id":1,"name":"classdiagram","metaobjects":[1],"metarelations":[1]}],"metadiagram":1}', 0, '', 0, '', '', '{"id":1,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[1],"relationships":[],"ve":{"version":1,"ver_type":"add"}}},"objects":{"1":{"meta_id":1,"id":1,"bound":{"x":242.1999969482422,"y":132,"width":58,"height":30},"properties":[{"meta_id":1,"children":[1]},{"meta_id":2,"children":[]},{"meta_id":3,"children":[]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}}},"properties":{"1":{"id":1,"meta_id":1,"value":"sample","ve":{"version":1,"ver_type":"add"}}},"relationships":{}}');

-- --------------------------------------------------------

--
-- テーブルの構造 `ProjectInfo`
--

DROP TABLE IF EXISTS `ProjectInfo`;
CREATE TABLE IF NOT EXISTS `ProjectInfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `xml` mediumtext NOT NULL,
  `metamodel_id` int(11) NOT NULL,
  `rep_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=54 ;

--
-- テーブルのデータをダンプしています `ProjectInfo`
--

INSERT INTO `ProjectInfo` (`id`, `name`, `xml`, `metamodel_id`, `rep_id`, `group_id`) VALUES
(10, 'json', '{"id":10,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[1,2],"relationships":[],"ve":{"version":1,"ver_type":"add"}},"2":{"id":2,"meta_id":2,"objects":[3,4],"relationships":[100001],"ve":{"version":1,"ver_type":"add"}},"6":{"id":6,"meta_id":2,"objects":[5,6],"relationships":[7],"ve":{"version":1,"ver_type":"add"}}},"objects":{"1":{"meta_id":3,"id":1,"bound":{"x":73.19999694824219,"y":38.400001525878906,"width":267,"height":105},"properties":[{"meta_id":3,"children":[1]}],"ve":{"version":1,"ver_type":"add"},"diagram":2,"ofd":{"z":0}},"2":{"meta_id":3,"id":2,"bound":{"x":427.1999969482422,"y":65.4000015258789,"width":90,"height":30},"properties":[{"meta_id":3,"children":[2]}],"ve":{"version":1,"ver_type":"add"},"diagram":6,"ofd":{"z":0}},"3":{"meta_id":1,"id":3,"bound":{"x":126.19999694824219,"y":80.4000015258789,"width":42,"height":30},"properties":[{"meta_id":1,"children":[3]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}},"4":{"meta_id":1,"id":4,"bound":{"x":567.1818237304688,"y":117.6363639831543,"width":42,"height":30},"properties":[{"meta_id":1,"children":[4]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}},"5":{"meta_id":1,"id":5,"bound":{"x":77.19999694824219,"y":80.4000015258789,"width":42,"height":30},"properties":[{"meta_id":1,"children":[6]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}},"6":{"meta_id":1,"id":6,"bound":{"x":306.1999969482422,"y":70.4000015258789,"width":42,"height":30},"properties":[{"meta_id":1,"children":[7]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":1}}},"properties":{"1":{"id":1,"value":"Linetracer c","ve":{"version":1,"ver_type":"add"}},"2":{"id":2,"value":"Controller","ve":{"version":1,"ver_type":"add"}},"3":{"id":3,"value":"stop","ve":{"version":1,"ver_type":"add"}},"4":{"id":4,"value":"go","ve":{"version":1,"ver_type":"add"}},"5":{"id":5,"value":"white","ve":{"version":1,"ver_type":"add"}},"6":{"id":6,"value":"go","ve":{"version":1,"ver_type":"add"}},"7":{"id":7,"value":"stop","ve":{"version":1,"ver_type":"add"}},"8":{"id":8,"value":"none","ve":{"version":1,"ver_type":"add"}},"9":{"id":9,"value":"","ve":{"version":1,"ver_type":"add"}},"10":{"id":10,"value":"","ve":{"version":1,"ver_type":"add"}},"100001":{"id":100001,"meta_id":2,"value":"white","ve":{"version":1,"ver_type":"add"}}},"relationships":{"7":{"meta_id":1,"id":7,"src":5,"dest":6,"points":[{"x":229.1999969482422,"y":137.4000015258789}],"properties":[{"meta_id":2,"children":[8]}],"ve":{"version":1,"ver_type":"add"}},"100001":{"meta_id":1,"id":100001,"src":3,"dest":4,"points":[],"properties":[{"meta_id":2,"children":[100001]}],"ve":{"version":1,"ver_type":"add"}}}}', 6, 1, 3),
(12, 'test', '{"relationships": {}, "properties": {}, "objects": {"1": {"ve": {"ver_type": "none", "version": 1}, "properties": [], "id": 1, "meta_id": 1, "bound": {"y": 112, "x": 155, "height": 50, "width": 50}}}, "current_version": "5", "root": 1, "id": 6, "diagrams": {"1": {"relationships": [], "objects": [], "id": 1, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}}}', 6, 6, 3),
(14, 'shinsyu1', '{"id":14,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[2,3,140001,140004,140005],"relationships":[5,140003,140006,140007,140008,140009],"ve":{"version":1,"ver_type":"add"}}},"objects":{"2":{"meta_id":1,"id":2,"bound":{"x":255.59999084472656,"y":55.59999942779541,"width":42,"height":30},"properties":[{"meta_id":1,"children":[2]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"3":{"meta_id":1,"id":3,"bound":{"x":401.1999969482422,"y":177.39999771118164,"width":42,"height":30},"properties":[{"meta_id":1,"children":[3]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"140001":{"meta_id":2,"id":140001,"bound":{"x":114.19999694824219,"y":77.39999771118164,"width":42,"height":42},"properties":[],"ve":{"version":1,"ver_type":"add"},"diagram":null},"140004":{"meta_id":1,"id":140004,"bound":{"x":214.1999969482422,"y":276.39999771118164,"width":42,"height":30},"properties":[{"meta_id":1,"children":[140002]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"140005":{"meta_id":1,"id":140005,"bound":{"x":522.1999969482422,"y":278.39999771118164,"width":50,"height":30},"properties":[{"meta_id":1,"children":[140003]}],"ve":{"version":1,"ver_type":"add"},"diagram":null}},"properties":{"1":{"id":1,"value":"stop","ve":{"version":1,"ver_type":"add"}},"2":{"id":2,"value":"stop","ve":{"version":1,"ver_type":"add"}},"3":{"id":3,"value":"go","ve":{"version":1,"ver_type":"add"}},"4":{"id":4,"value":"touch","ve":{"version":1,"ver_type":"add"}},"5":{"id":5,"value":"stop","ve":{"version":1,"ver_type":"add"}},"6":{"id":6,"value":"","ve":{"version":1,"ver_type":"add"}},"7":{"id":7,"value":"k","ve":{"version":1,"ver_type":"add"}},"140001":{"id":140001,"meta_id":2,"value":"","ve":{"version":1,"ver_type":"add"}},"140002":{"id":140002,"meta_id":1,"value":"left","ve":{"version":1,"ver_type":"add"}},"140003":{"id":140003,"meta_id":1,"value":"right","ve":{"version":1,"ver_type":"add"}},"140004":{"id":140004,"meta_id":2,"value":"white","ve":{"version":1,"ver_type":"add"}},"140005":{"id":140005,"meta_id":2,"value":"black","ve":{"version":1,"ver_type":"add"}},"140006":{"id":140006,"meta_id":2,"value":"black","ve":{"version":1,"ver_type":"add"}},"140007":{"id":140007,"meta_id":2,"value":"white","ve":{"version":1,"ver_type":"add"}}},"relationships":{"5":{"meta_id":1,"id":5,"src":2,"dest":3,"points":[],"properties":[{"meta_id":2,"children":[5]}],"ve":{"version":1,"ver_type":"add"}},"140003":{"meta_id":1,"id":140003,"src":140001,"dest":2,"points":[],"properties":[{"meta_id":2,"children":[140001]}],"ve":{"version":1,"ver_type":"add"}},"140006":{"meta_id":1,"id":140006,"src":3,"dest":140004,"points":[],"properties":[{"meta_id":2,"children":[140004]}],"ve":{"version":1,"ver_type":"add"}},"140007":{"meta_id":1,"id":140007,"src":3,"dest":140005,"points":[],"properties":[{"meta_id":2,"children":[140005]}],"ve":{"version":1,"ver_type":"add"}},"140008":{"meta_id":1,"id":140008,"src":140004,"dest":140005,"points":[{"x":377.1999969482422,"y":274.39999771118164}],"properties":[{"meta_id":2,"children":[140006]}],"ve":{"version":1,"ver_type":"add"}},"140009":{"meta_id":1,"id":140009,"src":140005,"dest":140004,"points":[{"x":381.1999969482422,"y":332.39999771118164}],"properties":[{"meta_id":2,"children":[140007]}],"ve":{"version":1,"ver_type":"add"}}}}', 8, 2, 1),
(15, 'rep', '{"id":15,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[150001,150002],"relationships":[150003],"ve":{"version":1,"ver_type":"add"}}},"objects":{"150001":{"meta_id":2,"id":150001,"bound":{"x":161.1999969482422,"y":170.20000076293945,"width":50,"height":50},"properties":[],"ve":{"version":1,"ver_type":"add"},"diagram":null},"150002":{"meta_id":1,"id":150002,"bound":{"x":277.1999969482422,"y":122.20000076293945,"width":42,"height":30},"properties":[{"meta_id":1,"children":[150001]}],"ve":{"version":1,"ver_type":"add"},"diagram":null}},"properties":{"150001":{"id":150001,"meta_id":1,"value":"stop","ve":{"version":1,"ver_type":"add"}},"150002":{"id":150002,"meta_id":2,"value":"go","ve":{"version":1,"ver_type":"add"}}},"relationships":{"150003":{"meta_id":1,"id":150003,"src":150001,"dest":150002,"points":[],"properties":[{"meta_id":2,"children":[150002]}],"ve":{"version":1,"ver_type":"add"}}}}', 8, 7, 1),
(16, 'rep2', '{"relationships":{"3":{"src":1,"ve":{"ver_type":"none","version":1},"dest":2,"properties":[{"children":[3],"meta_id":2}],"points":[],"meta_id":1,"id":3},"5":{"src":4,"ve":{"ver_type":"none","version":1},"dest":1,"properties":[{"children":[4],"meta_id":2}],"points":[],"meta_id":1,"id":5},"7":{"src":2,"ve":{"ver_type":"none","version":1},"dest":6,"properties":[{"children":[5],"meta_id":2}],"points":[],"meta_id":1,"id":7}},"properties":{"1":{"value":"stop","id":1,"meta_id":1,"ve":{"ver_type":"none","version":3}},"2":{"value":"go","id":2,"meta_id":1,"ve":{"ver_type":"none","version":3}},"3":{"value":"white","id":3,"meta_id":2,"ve":{"ver_type":"none","version":2}},"4":{"value":"none","id":4,"meta_id":2,"ve":{"ver_type":"none","version":2}},"5":{"value":"black","id":5,"meta_id":2,"ve":{"ver_type":"none","version":3}},"6":{"value":"go","id":6,"meta_id":1,"ve":{"ver_type":"none","version":3}},"7":{"value":"touch","id":7,"meta_id":2,"ve":{"ver_type":"none","version":4}},"8":{"value":"stop","id":8,"meta_id":1,"ve":{"ver_type":"none","version":4}}},"objects":{"1":{"ve":{"ver_type":"update","version":3},"bound":{"y":44.181819915771484,"x":179.72727966308594,"height":50,"width":50},"id":1,"diagram":null,"meta_id":1,"properties":[{"children":[1],"meta_id":1}]},"2":{"ve":{"ver_type":"none","version":2},"bound":{"y":113,"x":350,"height":50,"width":50},"id":2,"diagram":null,"meta_id":1,"properties":[{"children":[2],"meta_id":1}]},"4":{"ve":{"ver_type":"none","version":2},"bound":{"y":166,"x":83,"height":50,"width":50},"id":4,"diagram":null,"meta_id":2,"properties":[]},"6":{"ve":{"ver_type":"none","version":5},"bound":{"y":88,"x":498,"height":50,"width":50},"id":6,"diagram":null,"meta_id":1,"properties":[{"children":[6],"meta_id":1}]}},"current_version":"5","root":1,"id":16,"diagrams":{"1":{"relationships":[3,5,7],"objects":[1,2,4,6],"id":1,"meta_id":1,"ve":{"ver_type":"none","version":4}}}}', 8, 1, 1),
(17, 'rep3', '{"relationships":{"3":{"src":1,"ve":{"ver_type":"none","version":1},"dest":2,"properties":[{"children":[6],"meta_id":3}],"points":[],"meta_id":1,"id":3}},"properties":{"1":{"value":"a1","id":1,"meta_id":1,"ve":{"ver_type":"none","version":2}},"2":{"value":"test","id":2,"meta_id":2,"ve":{"ver_type":"none","version":4}},"4":{"value":"","id":4,"meta_id":1,"ve":{"ver_type":"none","version":4}},"5":{"value":"a","id":5,"meta_id":2,"ve":{"ver_type":"none","version":4}},"6":{"value":"link","id":6,"meta_id":3,"ve":{"ver_type":"none","version":4}},"7":{"id":7,"meta_id":1,"value":"aaa3","ve":{"version":1,"ver_type":"add"}}},"objects":{"1":{"ve":{"ver_type":"update","version":0},"properties":[{"children":[1,7],"meta_id":1},{"children":[2],"meta_id":2}],"id":1,"meta_id":1,"bound":{"y":40.181819915771484,"x":46.72727966308594,"height":50,"width":50}},"2":{"ve":{"ver_type":"update","version":1},"properties":[{"children":[4],"meta_id":1},{"children":[5],"meta_id":2}],"id":2,"meta_id":1,"bound":{"y":58.181819915771484,"x":199.72727966308594,"height":50,"width":50}}},"current_version":"4","root":1,"id":17,"diagrams":{"1":{"relationships":[3],"objects":[1,1,2],"id":1,"meta_id":1,"ve":{"ver_type":"none","version":4}}}}', 7, 11, 3),
(18, 'rep2copy', '{"relationships":{"3":{"src":1,"ve":{"ver_type":"none","version":1},"dest":2,"properties":[{"children":[3],"meta_id":2}],"points":[],"meta_id":1,"id":3},"5":{"src":4,"ve":{"ver_type":"none","version":1},"dest":1,"properties":[{"children":[4],"meta_id":2}],"points":[],"meta_id":1,"id":5},"7":{"src":2,"ve":{"ver_type":"none","version":1},"dest":6,"properties":[{"children":[5],"meta_id":2}],"points":[],"meta_id":1,"id":7},"9":{"meta_id":1,"id":9,"src":6,"dest":8,"points":[],"properties":[{"meta_id":2,"children":[7]}],"ve":{"version":1,"ver_type":"add"}}},"properties":{"1":{"value":"stop","id":1,"meta_id":1,"ve":{"ver_type":"none","version":3}},"2":{"value":"go","id":2,"meta_id":1,"ve":{"ver_type":"none","version":3}},"3":{"value":"white","id":3,"meta_id":2,"ve":{"ver_type":"none","version":2}},"4":{"value":"none","id":4,"meta_id":2,"ve":{"ver_type":"none","version":2}},"5":{"value":"black","id":5,"meta_id":2,"ve":{"ver_type":"none","version":3}},"6":{"value":"go","id":6,"meta_id":1,"ve":{"ver_type":"none","version":3}},"7":{"id":7,"meta_id":2,"value":"touch","ve":{"version":1,"ver_type":"add"}},"8":{"id":8,"meta_id":1,"value":"stop","ve":{"version":1,"ver_type":"add"}}},"objects":{"1":{"ve":{"ver_type":"none","version":0},"properties":[{"children":[1],"meta_id":1}],"id":1,"meta_id":1,"bound":{"y":83,"x":190,"height":50,"width":50}},"2":{"ve":{"ver_type":"none","version":1},"properties":[{"children":[2],"meta_id":1}],"id":2,"meta_id":1,"bound":{"y":113,"x":350,"height":50,"width":50}},"4":{"ve":{"ver_type":"none","version":1},"properties":[],"id":4,"meta_id":2,"bound":{"y":166,"x":83,"height":50,"width":50}},"6":{"ve":{"ver_type":"none","version":1},"properties":[{"children":[6],"meta_id":1}],"id":6,"meta_id":1,"bound":{"y":133,"x":499,"height":50,"width":50}},"8":{"meta_id":1,"id":8,"bound":{"x":296.72727966308594,"y":207.18181991577148,"width":42,"height":30},"properties":[{"meta_id":1,"children":[8]}],"ve":{"version":1,"ver_type":"add"},"diagram":null}},"current_version":"3","root":1,"id":18,"diagrams":{"1":{"relationships":[3,5,7,9],"objects":[1,2,4,6,8],"id":1,"meta_id":1,"ve":{"ver_type":"update","version":3}}}}', 8, 1, 1),
(20, 'uml_test2', '{"relationships": {"3": {"src": 1, "ve": {"ver_type": "none", "version": 1}, "dest": 2, "properties": [{"children": [3], "meta_id": 1}], "points": [], "meta_id": 1, "id": 3}, "5": {"src": 2, "ve": {"ver_type": "none", "version": 1}, "dest": 4, "properties": [{"children": [10], "meta_id": 1}], "points": [], "meta_id": 1, "id": 5}, "200002": {"src": 1, "ve": {"ver_type": "none", "version": 1}, "dest": 200001, "properties": [{"children": [200002], "meta_id": 1}], "points": [], "meta_id": 1, "id": 200002}, "200005": {"src": 4, "ve": {"ver_type": "add", "version": 1}, "dest": 200003, "id": 200005, "points": [], "meta_id": 1, "properties": [{"children": [200005], "meta_id": 1}]}}, "properties": {"11": {"value": "+\\u540d\\u524d:String", "id": 11, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "10": {"value": "", "id": 10, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "13": {"value": "+\\u8eab\\u9577:int", "id": 13, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "12": {"value": "+age:int", "id": 12, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "200004": {"value": "", "id": 200004, "meta_id": 1, "ve": {"ver_type": "none", "version": 9}}, "200005": {"value": "-isbn:String", "id": 200005, "meta_id": 2, "ve": {"ver_type": "none", "version": 10}}, "200001": {"value": "\\u672c\\u68da", "id": 200001, "meta_id": 1, "ve": {"ver_type": "none", "version": 6}}, "200002": {"value": "", "id": 200002, "meta_id": 1, "ve": {"ver_type": "none", "version": 6}}, "1": {"value": "Book", "id": 1, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "3": {"value": "\\u4f9d\\u5b58", "id": 3, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "2": {"value": "Order", "id": 2, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "5": {"value": "+getTitle():string", "id": 5, "meta_id": 3, "ve": {"ver_type": "none", "version": 2}}, "4": {"value": "-title:String", "id": 4, "meta_id": 2, "ve": {"ver_type": "none", "version": 2}}, "7": {"value": "+getBookId():int", "id": 7, "meta_id": 3, "ve": {"ver_type": "none", "version": 2}}, "6": {"value": "-book_id:int", "id": 6, "meta_id": 2, "ve": {"ver_type": "none", "version": 2}}, "9": {"value": "\\u8077\\u54e1", "id": 9, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}, "8": {"value": "-order_id:int", "id": 8, "meta_id": 2, "ve": {"ver_type": "none", "version": 3}}, "200003": {"value": "aaa", "id": 200003, "meta_id": 1, "ve": {"ver_type": "none", "version": 8}}}, "objects": {"200001": {"ve": {"ver_type": "none", "version": 6}, "bound": {"y": 191, "x": 128, "height": 50, "width": 50}, "id": 200001, "diagram": null, "meta_id": 1, "properties": [{"children": [200001], "meta_id": 1}]}, "200003": {"ve": {"ver_type": "update", "version": 8}, "bound": {"y": 213, "x": 462, "height": 50, "width": 50}, "id": 200003, "diagram": null, "meta_id": 1, "properties": [{"children": [200003], "meta_id": 1}, {"children": [], "meta_id": 2}, {"children": [], "meta_id": 3}]}, "200004": {"ve": {"ver_type": "update", "version": 9}, "bound": {"y": 252, "x": 562, "height": 50, "width": 50}, "id": 200004, "diagram": null, "meta_id": 1, "properties": [{"children": [200004], "meta_id": 1}, {"children": [], "meta_id": 2}, {"children": [], "meta_id": 3}]}, "1": {"ve": {"ver_type": "none", "version": 10}, "bound": {"y": 85, "x": 117, "height": 50, "width": 50}, "id": 1, "diagram": null, "meta_id": 1, "properties": [{"children": [1], "meta_id": 1}, {"children": [4, 200005], "meta_id": 2}, {"children": [5], "meta_id": 3}]}, "2": {"ve": {"ver_type": "none", "version": 5}, "bound": {"y": 41, "x": 428, "height": 50, "width": 50}, "id": 2, "diagram": null, "meta_id": 1, "properties": [{"children": [2], "meta_id": 1}, {"children": [6, 8], "meta_id": 2}, {"children": [7], "meta_id": 3}]}, "4": {"ve": {"ver_type": "update", "version": 8}, "bound": {"y": 227, "x": 236, "height": 50, "width": 50}, "id": 4, "diagram": null, "meta_id": 1, "properties": [{"children": [9], "meta_id": 1}, {"children": [11, 12, 13], "meta_id": 2}, {"children": [], "meta_id": 3}]}}, "current_version": "10", "root": 1, "id": 2, "diagrams": {"1": {"relationships": [3, 5, 200005], "objects": [1, 2, 4, 200003, 200004], "id": 1, "meta_id": 1, "ve": {"ver_type": "update", "version": 9}}}}', 9, 2, 3),
(21, 'core_test1', '{"id":21,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[210001,210002],"relationships":[],"ve":{"version":1,"ver_type":"add"}},"210001":{"id":210001,"meta_id":2,"objects":[210003,210004,210014],"relationships":[210005,210016],"ve":{"version":1,"ver_type":"add"}},"210002":{"id":210002,"meta_id":2,"objects":[210006,210007,210012],"relationships":[210008,210013],"ve":{"version":1,"ver_type":"add"}}},"objects":{"210001":{"meta_id":3,"id":210001,"bound":{"x":69.72727966308594,"y":96.18181991577148,"width":90,"height":30},"properties":[{"meta_id":3,"children":[210001]}],"ve":{"version":1,"ver_type":"add"},"diagram":210001},"210002":{"meta_id":3,"id":210002,"bound":{"x":296.72727966308594,"y":142.18181991577148,"width":90,"height":30},"properties":[{"meta_id":3,"children":[210002]}],"ve":{"version":1,"ver_type":"add"},"diagram":210002},"210003":{"meta_id":1,"id":210003,"bound":{"x":324.72727966308594,"y":77.18181991577148,"width":42,"height":30},"properties":[{"meta_id":1,"children":[210003]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"210004":{"meta_id":2,"id":210004,"bound":{"x":41.19999694824219,"y":17.400001525878906,"width":42,"height":42},"properties":[],"ve":{"version":1,"ver_type":"add"},"diagram":null},"210006":{"meta_id":2,"id":210006,"bound":{"x":84.72727966308594,"y":176.18181991577148,"width":42,"height":42},"properties":[],"ve":{"version":1,"ver_type":"add"},"diagram":null},"210007":{"meta_id":1,"id":210007,"bound":{"x":247.72727966308594,"y":70.18181991577148,"width":42,"height":30},"properties":[{"meta_id":1,"children":[210005]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"210012":{"meta_id":1,"id":210012,"bound":{"x":404.72727966308594,"y":105.18181991577148,"width":42,"height":30},"properties":[{"meta_id":1,"children":[210010]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"210014":{"meta_id":1,"id":210014,"bound":{"x":450.72727966308594,"y":186.18181991577148,"width":98,"height":30},"properties":[{"meta_id":1,"children":[210012]}],"ve":{"version":1,"ver_type":"add"},"diagram":null}},"properties":{"210001":{"id":210001,"meta_id":3,"value":"Controller","ve":{"version":1,"ver_type":"add"}},"210002":{"id":210002,"meta_id":3,"value":"Linetracer","ve":{"version":1,"ver_type":"add"}},"210003":{"id":210003,"meta_id":1,"value":"stop","ve":{"version":1,"ver_type":"add"}},"210004":{"id":210004,"meta_id":2,"value":"none","ve":{"version":1,"ver_type":"add"}},"210005":{"id":210005,"meta_id":1,"value":"stop","ve":{"version":1,"ver_type":"add"}},"210006":{"id":210006,"meta_id":2,"value":"none","ve":{"version":1,"ver_type":"add"}},"210007":{"id":210007,"meta_id":4,"value":"","ve":{"version":1,"ver_type":"add"}},"210008":{"id":210008,"meta_id":4,"value":"userdefine1","ve":{"version":1,"ver_type":"add"}},"210009":{"id":210009,"meta_id":2,"value":"touch","ve":{"version":1,"ver_type":"add"}},"210010":{"id":210010,"meta_id":1,"value":"go","ve":{"version":1,"ver_type":"add"}},"210011":{"id":210011,"meta_id":2,"value":"userdefine1","ve":{"version":1,"ver_type":"add"}},"210012":{"id":210012,"meta_id":1,"value":"userdefine1","ve":{"version":1,"ver_type":"add"}},"210013":{"id":210013,"meta_id":2,"value":"","ve":{"version":1,"ver_type":"add"}},"210014":{"id":210014,"meta_id":2,"value":"touch","ve":{"version":1,"ver_type":"add"}}},"relationships":{"210005":{"meta_id":1,"id":210005,"src":210004,"dest":210003,"points":[],"properties":[{"meta_id":2,"children":[210004]}],"ve":{"version":1,"ver_type":"add"}},"210008":{"meta_id":1,"id":210008,"src":210006,"dest":210007,"points":[],"properties":[{"meta_id":2,"children":[210006]}],"ve":{"version":1,"ver_type":"add"}},"210013":{"meta_id":1,"id":210013,"src":210007,"dest":210012,"points":[],"properties":[{"meta_id":2,"children":[210011]}],"ve":{"version":1,"ver_type":"add"}},"210016":{"meta_id":1,"id":210016,"src":210003,"dest":210014,"points":[],"properties":[{"meta_id":2,"children":[210014]}],"ve":{"version":1,"ver_type":"add"}}}}', 10, 0, 3),
(22, 'uml_test3', '{"relationships": {"3": {"src": 1, "ve": {"ver_type": "none", "version": 1}, "dest": 2, "properties": [{"children": [3], "meta_id": 1}], "points": [], "meta_id": 1, "id": 3}, "5": {"src": 2, "ve": {"ver_type": "none", "version": 1}, "dest": 4, "properties": [{"children": [10], "meta_id": 1}], "points": [], "meta_id": 1, "id": 5}, "200002": {"src": 1, "ve": {"ver_type": "none", "version": 1}, "dest": 200001, "properties": [{"children": [200002], "meta_id": 1}], "points": [], "meta_id": 1, "id": 200002}}, "properties": {"11": {"value": "+\\u540d\\u524d:String", "id": 11, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "10": {"value": "", "id": 10, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "13": {"value": "+\\u8eab\\u9577:int", "id": 13, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "12": {"value": "+age:int", "id": 12, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "200004": {"value": "", "id": 200004, "meta_id": 1, "ve": {"ver_type": "none", "version": 9}}, "200001": {"value": "\\u672c\\u68da", "id": 200001, "meta_id": 1, "ve": {"ver_type": "none", "version": 6}}, "200002": {"value": "", "id": 200002, "meta_id": 1, "ve": {"ver_type": "none", "version": 6}}, "1": {"value": "Book", "id": 1, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "3": {"value": "\\u4f9d\\u5b58", "id": 3, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "2": {"value": "Order", "id": 2, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "5": {"value": "+getTitle():string", "id": 5, "meta_id": 3, "ve": {"ver_type": "none", "version": 2}}, "4": {"value": "-title:String", "id": 4, "meta_id": 2, "ve": {"ver_type": "none", "version": 2}}, "7": {"value": "+getBookId():int", "id": 7, "meta_id": 3, "ve": {"ver_type": "none", "version": 2}}, "6": {"value": "-book_id:int", "id": 6, "meta_id": 2, "ve": {"ver_type": "none", "version": 2}}, "9": {"value": "\\u8077\\u54e1", "id": 9, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}, "8": {"value": "-order_id:int", "id": 8, "meta_id": 2, "ve": {"ver_type": "none", "version": 3}}, "200003": {"value": "aaa", "id": 200003, "meta_id": 1, "ve": {"ver_type": "none", "version": 8}}}, "objects": {"200001": {"ve": {"ver_type": "none", "version": 6}, "bound": {"y": 191, "x": 128, "height": 50, "width": 50}, "id": 200001, "diagram": null, "meta_id": 1, "properties": [{"children": [200001], "meta_id": 1}]}, "200003": {"ve": {"ver_type": "none", "version": 8}, "bound": {"y": 213, "x": 462, "height": 50, "width": 50}, "id": 200003, "diagram": null, "meta_id": 1, "properties": [{"children": [200003], "meta_id": 1}]}, "200004": {"ve": {"ver_type": "none", "version": 9}, "bound": {"y": 252, "x": 562, "height": 50, "width": 50}, "id": 200004, "diagram": null, "meta_id": 1, "properties": [{"children": [200004], "meta_id": 1}]}, "1": {"ve": {"ver_type": "none", "version": 9}, "bound": {"y": 76, "x": 118, "height": 50, "width": 50}, "id": 1, "diagram": null, "meta_id": 1, "properties": [{"children": [1], "meta_id": 1}, {"children": [4], "meta_id": 2}, {"children": [5], "meta_id": 3}]}, "2": {"ve": {"ver_type": "none", "version": 5}, "bound": {"y": 41, "x": 428, "height": 50, "width": 50}, "id": 2, "diagram": null, "meta_id": 1, "properties": [{"children": [2], "meta_id": 1}, {"children": [6, 8], "meta_id": 2}, {"children": [7], "meta_id": 3}]}, "4": {"ve": {"ver_type": "none", "version": 8}, "bound": {"y": 227, "x": 236, "height": 50, "width": 50}, "id": 4, "diagram": null, "meta_id": 1, "properties": [{"children": [9], "meta_id": 1}, {"children": [11, 12, 13], "meta_id": 2}]}}, "current_version": "9", "root": 1, "id": 2, "diagrams": {"1": {"relationships": [3, 5], "objects": [1, 2, 4, 200003, 200004], "id": 1, "meta_id": 1, "ve": {"ver_type": "none", "version": 9}}}}', 9, 2, 3),
(23, 'uml_test4', '{"relationships":{"220005":{"src":220002,"ve":{"ver_type":"none","version":1},"dest":220004,"properties":[{"children":[220005],"meta_id":1}],"points":[],"meta_id":1,"id":220005},"220007":{"src":220004,"ve":{"ver_type":"none","version":1},"dest":220006,"properties":[{"children":[220007],"meta_id":1}],"points":[],"meta_id":1,"id":220007},"230002":{"src":220004,"ve":{"ver_type":"none","version":1},"dest":230001,"properties":[{"children":[230002],"meta_id":1}],"points":[],"meta_id":1,"id":230002},"230004":{"src":220002,"ve":{"ver_type":"none","version":1},"dest":230003,"properties":[{"children":[230004],"meta_id":1}],"points":[],"meta_id":1,"id":230004},"230006":{"src":220002,"ve":{"ver_type":"none","version":1},"dest":230005,"properties":[{"children":[230006],"meta_id":1}],"points":[],"meta_id":1,"id":230006}},"properties":{"220001":{"value":"ã™ã”ã„","id":220001,"meta_id":1,"ve":{"ver_type":"none","version":2}},"220002":{"value":"çœ ã„","id":220002,"meta_id":1,"ve":{"ver_type":"none","version":2}},"220003":{"value":"","id":220003,"meta_id":1,"ve":{"ver_type":"none","version":2}},"220004":{"value":"ã§ã”ã‚ã™ã€‚","id":220004,"meta_id":1,"ve":{"ver_type":"none","version":3}},"220005":{"value":"","id":220005,"meta_id":1,"ve":{"ver_type":"none","version":3}},"220006":{"value":"æ±äº¬","id":220006,"meta_id":1,"ve":{"ver_type":"none","version":4}},"220007":{"value":"","id":220007,"meta_id":1,"ve":{"ver_type":"none","version":4}},"230001":{"value":"ï¼’ï¼“","id":230001,"meta_id":1,"ve":{"ver_type":"none","version":5}},"230002":{"value":"","id":230002,"meta_id":1,"ve":{"ver_type":"none","version":5}},"230003":{"value":"ä¸­é–“","id":230003,"meta_id":1,"ve":{"ver_type":"none","version":6}},"230004":{"value":"","id":230004,"meta_id":1,"ve":{"ver_type":"none","version":6}},"230005":{"value":"ãªã‚“ã ã“ã‚Œã¯","id":230005,"meta_id":1,"ve":{"ver_type":"none","version":7}},"230006":{"value":"","id":230006,"meta_id":1,"ve":{"ver_type":"none","version":7}},"230008":{"value":"bbbbb","id":230008,"meta_id":2,"ve":{"ver_type":"none","version":8}},"230009":{"value":"ggg","id":230009,"meta_id":2,"ve":{"ver_type":"none","version":9}},"230010":{"value":"pppppppp","id":230010,"meta_id":2,"ve":{"ver_type":"none","version":9}},"230011":{"value":"sss","id":230011,"meta_id":2,"ve":{"ver_type":"none","version":9}},"230012":{"value":"ererefefdv","id":230012,"meta_id":2,"ve":{"ver_type":"none","version":9}},"230013":{"value":"sugoi","id":230013,"meta_id":2,"ve":{"ver_type":"none","version":9}},"230014":{"value":"gdssgf","id":230014,"meta_id":2,"ve":{"ver_type":"none","version":9}},"230015":{"value":"koredesaigo","id":230015,"meta_id":2,"ve":{"ver_type":"none","version":9}}},"objects":{"220002":{"ve":{"ver_type":"none","version":12},"bound":{"y":135,"x":201,"height":70,"width":98},"id":220002,"diagram":null,"meta_id":1,"properties":[{"children":[220002],"meta_id":1},{"children":[230008,230015],"meta_id":2}]},"220004":{"ve":{"ver_type":"none","version":3},"bound":{"y":177,"x":410,"height":30,"width":50},"id":220004,"diagram":null,"meta_id":1,"properties":[{"children":[220004],"meta_id":1}]},"220006":{"ve":{"ver_type":"none","version":4},"bound":{"y":129,"x":533,"height":30,"width":42},"id":220006,"diagram":null,"meta_id":1,"properties":[{"children":[220006],"meta_id":1}]},"230001":{"ve":{"ver_type":"none","version":5},"bound":{"y":210,"x":541,"height":30,"width":42},"id":230001,"diagram":null,"meta_id":1,"properties":[{"children":[230001],"meta_id":1}]},"230003":{"ve":{"ver_type":"none","version":6},"bound":{"y":57,"x":290,"height":30,"width":42},"id":230003,"diagram":null,"meta_id":1,"properties":[{"children":[230003],"meta_id":1}]},"230005":{"ve":{"ver_type":"update","version":12},"bound":{"y":115,"x":70,"height":30,"width":58},"id":230005,"diagram":null,"meta_id":1,"properties":[{"children":[230005],"meta_id":1},{"children":[],"meta_id":2},{"children":[],"meta_id":3}]}},"current_version":"12","root":0,"id":23,"diagrams":{"1":{"relationships":[220005,220007,230002,230004,230006],"objects":[220002,220004,220006,230001,230003,230005],"id":1,"meta_id":1,"ve":{"ver_type":"none","version":11}}}}', 9, 3, 3),
(24, 'test', '', 8, 0, 1),
(26, 'reprep', '{"relationships": {"3": {"src": 1, "ve": {"ver_type": "none", "version": 1}, "dest": 2, "properties": [{"children": [3], "meta_id": 1}], "points": [], "meta_id": 1, "id": 3}, "5": {"src": 2, "ve": {"ver_type": "none", "version": 1}, "dest": 4, "properties": [{"children": [10], "meta_id": 1}], "points": [], "meta_id": 1, "id": 5}, "200002": {"src": 1, "ve": {"ver_type": "none", "version": 1}, "dest": 200001, "properties": [{"children": [200002], "meta_id": 1}], "points": [], "meta_id": 1, "id": 200002}}, "properties": {"11": {"value": "+\\u540d\\u524d:String", "id": 11, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "10": {"value": "", "id": 10, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "13": {"value": "+\\u8eab\\u9577:int", "id": 13, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "12": {"value": "+age:int", "id": 12, "meta_id": 2, "ve": {"ver_type": "none", "version": 5}}, "200004": {"value": "", "id": 200004, "meta_id": 1, "ve": {"ver_type": "none", "version": 9}}, "200001": {"value": "\\u672c\\u68da", "id": 200001, "meta_id": 1, "ve": {"ver_type": "none", "version": 6}}, "200002": {"value": "", "id": 200002, "meta_id": 1, "ve": {"ver_type": "none", "version": 6}}, "1": {"value": "Book", "id": 1, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "3": {"value": "\\u4f9d\\u5b58", "id": 3, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "2": {"value": "Order", "id": 2, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "5": {"value": "+getTitle():string", "id": 5, "meta_id": 3, "ve": {"ver_type": "none", "version": 2}}, "4": {"value": "-title:String", "id": 4, "meta_id": 2, "ve": {"ver_type": "none", "version": 2}}, "7": {"value": "+getBookId():int", "id": 7, "meta_id": 3, "ve": {"ver_type": "none", "version": 2}}, "6": {"value": "-book_id:int", "id": 6, "meta_id": 2, "ve": {"ver_type": "none", "version": 2}}, "9": {"value": "\\u8077\\u54e1", "id": 9, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}, "8": {"value": "-order_id:int", "id": 8, "meta_id": 2, "ve": {"ver_type": "none", "version": 3}}, "200003": {"value": "aaa", "id": 200003, "meta_id": 1, "ve": {"ver_type": "none", "version": 8}}}, "objects": {"200001": {"ve": {"ver_type": "none", "version": 6}, "bound": {"y": 191, "x": 128, "height": 50, "width": 50}, "id": 200001, "diagram": null, "meta_id": 1, "properties": [{"children": [200001], "meta_id": 1}]}, "200003": {"ve": {"ver_type": "none", "version": 8}, "bound": {"y": 213, "x": 462, "height": 50, "width": 50}, "id": 200003, "diagram": null, "meta_id": 1, "properties": [{"children": [200003], "meta_id": 1}]}, "200004": {"ve": {"ver_type": "none", "version": 9}, "bound": {"y": 252, "x": 562, "height": 50, "width": 50}, "id": 200004, "diagram": null, "meta_id": 1, "properties": [{"children": [200004], "meta_id": 1}]}, "1": {"ve": {"ver_type": "none", "version": 9}, "bound": {"y": 76, "x": 118, "height": 50, "width": 50}, "id": 1, "diagram": null, "meta_id": 1, "properties": [{"children": [1], "meta_id": 1}, {"children": [4], "meta_id": 2}, {"children": [5], "meta_id": 3}]}, "2": {"ve": {"ver_type": "none", "version": 5}, "bound": {"y": 41, "x": 428, "height": 50, "width": 50}, "id": 2, "diagram": null, "meta_id": 1, "properties": [{"children": [2], "meta_id": 1}, {"children": [6, 8], "meta_id": 2}, {"children": [7], "meta_id": 3}]}, "4": {"ve": {"ver_type": "none", "version": 8}, "bound": {"y": 227, "x": 236, "height": 50, "width": 50}, "id": 4, "diagram": null, "meta_id": 1, "properties": [{"children": [9], "meta_id": 1}, {"children": [11, 12, 13], "meta_id": 2}]}}, "current_version": "9", "root": 1, "id": 2, "diagrams": {"1": {"relationships": [3, 5], "objects": [1, 2, 4, 200003, 200004], "id": 1, "meta_id": 1, "ve": {"ver_type": "none", "version": 9}}}}', 9, 2, 3),
(28, 'éƒ¨è°·', '', 8, 0, 1),
(29, 'a', '', 8, 0, 1),
(30, 'test1', '{"relationships":{"300004":{"src":300003,"ve":{"ver_type":"none","version":1},"dest":300002,"properties":[{"children":[300005],"meta_id":1}],"points":[],"meta_id":1,"id":300004}},"properties":{"300001":{"value":"aaa","id":300001,"meta_id":1,"ve":{"ver_type":"none","version":2}},"300002":{"value":"bbb","id":300002,"meta_id":2,"ve":{"ver_type":"none","version":2}},"300003":{"value":"aaa","id":300003,"meta_id":1,"ve":{"ver_type":"none","version":3}},"300004":{"value":"","id":300004,"meta_id":1,"ve":{"ver_type":"none","version":4}},"300005":{"value":"","id":300005,"meta_id":1,"ve":{"ver_type":"none","version":4}},"300006":{"value":"bbb","id":300006,"meta_id":2,"ve":{"ver_type":"none","version":4}},"300007":{"value":"hhh","id":300007,"meta_id":2,"ve":{"ver_type":"none","version":5}},"310001":{"value":"ccc","id":310001,"meta_id":2,"ve":{"ver_type":"none","version":6}},"310002":{"id":310002,"meta_id":1,"value":"","ve":{"version":1,"ver_type":"add"}},"310003":{"id":310003,"meta_id":1,"value":"","ve":{"version":1,"ver_type":"add"}}},"objects":{"300001":{"ve":{"ver_type":"update","version":5},"bound":{"y":46,"x":96,"height":50,"width":42},"id":300001,"diagram":null,"meta_id":1,"properties":[{"children":[300001],"meta_id":1},{"children":[300002],"meta_id":2},{"children":[],"meta_id":3}]},"300002":{"ve":{"ver_type":"update","version":5},"bound":{"y":90.18181991577148,"x":40.72727966308594,"height":50,"width":42},"id":300002,"diagram":null,"meta_id":1,"properties":[{"children":[300003],"meta_id":1},{"children":[300006],"meta_id":2},{"children":[],"meta_id":3}]},"300003":{"ve":{"ver_type":"update","version":6},"bound":{"y":102.18181991577148,"x":224.72727966308594,"height":70,"width":42},"id":300003,"diagram":null,"meta_id":1,"properties":[{"children":[300004],"meta_id":1},{"children":[300007,310001],"meta_id":2},{"children":[],"meta_id":3}]},"300005":{"meta_id":1,"id":300005,"bound":{"x":269.72727966308594,"y":203.18181991577148,"width":50,"height":50},"properties":[{"meta_id":1,"children":[310002]},{"meta_id":2,"children":[]},{"meta_id":3,"children":[]}],"ve":{"version":1,"ver_type":"add"},"diagram":null},"300006":{"meta_id":1,"id":300006,"bound":{"x":421.72727966308594,"y":103.18181991577148,"width":50,"height":50},"properties":[{"meta_id":1,"children":[310003]},{"meta_id":2,"children":[]},{"meta_id":3,"children":[]}],"ve":{"version":1,"ver_type":"add"},"diagram":null}},"current_version":"6","root":0,"id":30,"diagrams":{"1":{"relationships":[300004],"objects":[300002,300003,300005,300006],"id":1,"meta_id":1,"ve":{"ver_type":"update","version":4}}}}', 9, 4, 3),
(31, 'test2', '{"relationships":{"300004":{"src":300003,"ve":{"ver_type":"none","version":1},"dest":300002,"properties":[{"children":[300005],"meta_id":1}],"points":[],"meta_id":1,"id":300004}},"properties":{"300001":{"value":"aaa","id":300001,"meta_id":1,"ve":{"ver_type":"none","version":2}},"300002":{"value":"bbb","id":300002,"meta_id":2,"ve":{"ver_type":"none","version":2}},"300003":{"value":"aaa","id":300003,"meta_id":1,"ve":{"ver_type":"none","version":3}},"300004":{"value":"","id":300004,"meta_id":1,"ve":{"ver_type":"none","version":4}},"300005":{"value":"","id":300005,"meta_id":1,"ve":{"ver_type":"none","version":4}},"300006":{"value":"bbb","id":300006,"meta_id":2,"ve":{"ver_type":"none","version":4}},"300007":{"value":"hhh","id":300007,"meta_id":2,"ve":{"ver_type":"none","version":5}},"310001":{"value":"ccc","id":310001,"meta_id":2,"ve":{"ver_type":"none","version":6}},"310002":{"value":"","id":310002,"meta_id":1,"ve":{"ver_type":"none","version":7}},"310003":{"value":"ãƒ†ã‚¹ãƒˆ","id":310003,"meta_id":1,"ve":{"ver_type":"update","version":7}}},"objects":{"300001":{"ve":{"ver_type":"none","version":7},"bound":{"y":46,"x":96,"height":50,"width":42},"id":300001,"diagram":null,"meta_id":1,"properties":[{"children":[300001],"meta_id":1},{"children":[300002],"meta_id":2}]},"300002":{"ve":{"ver_type":"update","version":7},"bound":{"y":43.39999771118164,"x":34.19999694824219,"height":50,"width":42},"id":300002,"diagram":null,"meta_id":1,"properties":[{"children":[300003],"meta_id":1},{"children":[300006],"meta_id":2},{"meta_id":3,"children":[]}]},"300003":{"ve":{"ver_type":"none","version":14},"bound":{"y":42,"x":202,"height":70,"width":42},"id":300003,"diagram":null,"meta_id":1,"properties":[{"children":[300004],"meta_id":1},{"children":[300007,310001],"meta_id":2},{"children":[],"meta_id":3}]},"300005":{"ve":{"ver_type":"none","version":14},"bound":{"y":203,"x":270,"height":30,"width":42},"id":300005,"diagram":null,"meta_id":1,"properties":[{"children":[310002],"meta_id":1},{"children":[],"meta_id":2},{"children":[],"meta_id":3}]},"300006":{"ve":{"ver_type":"update","version":14},"bound":{"y":54.39999771118164,"x":356.1999969482422,"height":30,"width":42},"id":300006,"diagram":null,"meta_id":1,"properties":[{"children":[310003],"meta_id":1},{"children":[],"meta_id":2},{"children":[],"meta_id":3}]}},"current_version":"14","root":0,"id":31,"diagrams":{"1":{"relationships":[300004],"objects":[300002,300003,300005,300006],"id":1,"meta_id":1,"ve":{"ver_type":"none","version":7}}}}', 9, 4, 3),
(32, 'test', '{"id":32,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[320001],"relationships":[],"ve":{"version":1,"ver_type":"add"}}},"objects":{"320001":{"meta_id":1,"id":320001,"bound":{"x":119.19999694824219,"y":121.20000076293945,"width":50,"height":50},"properties":[{"meta_id":1,"children":[320001]}],"ve":{"version":1,"ver_type":"add"},"diagram":null}},"properties":{"320001":{"id":320001,"meta_id":1,"value":"","ve":{"version":1,"ver_type":"add"}}},"relationships":{}}', 8, 0, 1),
(33, 'test', '', 9, 0, 3),
(34, 'test', '', 8, 0, 1),
(35, 'core_test', '', 10, 0, 3),
(36, 'test_project1', '', 17, 0, 5),
(37, 'test_project_tmp', '', 11, 0, 5),
(39, 'test', '{"id":39,"root":390001,"current_version":1,"diagrams":{"390001":{"id":390001,"meta_id":1,"objects":[390001],"relationships":[],"ve":{"version":1,"ver_type":"add"}},"390002":{"id":390002,"meta_id":1,"objects":[],"relationships":[],"ve":{"version":1,"ver_type":"add"}}},"objects":{"390001":{"meta_id":1,"id":390001,"bound":{"x":480.1999969482422,"y":92.4000015258789,"width":50,"height":50},"properties":[{"meta_id":1,"children":[390001]},{"meta_id":2,"children":[]},{"meta_id":3,"children":[]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}}},"properties":{"390001":{"id":390001,"meta_id":1,"value":"","ve":{"version":1,"ver_type":"add"}}},"relationships":{}}', 9, 0, 3),
(40, 'aa', '', 19, 0, 0),
(41, 'bb', '', 19, 0, 0),
(42, 'cc', '', 19, 0, 0),
(43, 'dd', '', 19, 0, 0),
(44, 'ee', '{"id":1,"root":1,"current_version":1,"diagrams":{"1":{"id":1,"meta_id":1,"objects":[1],"relationships":[],"ve":{"version":1,"ver_type":"add"}}},"objects":{"1":{"meta_id":1,"id":1,"bound":{"x":242.1999969482422,"y":132,"width":58,"height":30},"properties":[{"meta_id":1,"children":[1]},{"meta_id":2,"children":[]},{"meta_id":3,"children":[]}],"ve":{"version":1,"ver_type":"add"},"diagram":null,"ofd":{"z":0}}},"properties":{"1":{"id":1,"meta_id":1,"value":"sample","ve":{"version":1,"ver_type":"add"}}},"relationships":{}}', 19, 0, 0),
(49, 'uml56', '{"relationships": {}, "properties": {"490001": {"value": "aaa", "id": 490001, "meta_id": 1, "ve": {"ver_type": "add", "version": 1}}}, "objects": {}, "current_version": "1", "root": 0, "id": 7, "diagrams": {"490001": {"relationships": [], "ve": {"ver_type": "add", "version": 1}, "properties": [{"children": [490001], "meta_id": 1}], "objects": [], "meta_id": 1, "id": 490001}}}', 18, 7, 3),
(50, 'uml57', '{"relationships": {"500017": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500009, "properties": [{"children": [500021], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500017}, "500018": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500011, "properties": [{"children": [500022], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500018}, "500019": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500006, "properties": [{"children": [500023], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500019}, "500013": {"src": 500012, "ve": {"ver_type": "none", "version": 1}, "dest": 500005, "properties": [{"children": [500017], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500013}, "500016": {"src": 500006, "ve": {"ver_type": "none", "version": 1}, "dest": 500011, "properties": [{"children": [500020], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500016}, "500004": {"src": 500003, "ve": {"ver_type": "none", "version": 1}, "dest": 500002, "properties": [{"children": [500006], "meta_id": 4}], "points": [], "meta_id": 2, "id": 500004}, "500014": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500008, "properties": [{"children": [500018], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500014}, "500015": {"src": 500008, "ve": {"ver_type": "none", "version": 1}, "dest": 500006, "properties": [{"children": [500019], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500015}}, "properties": {"500023": {"value": "", "id": 500023, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500022": {"value": "", "id": 500022, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500021": {"value": "", "id": 500021, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500020": {"value": "", "id": 500020, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500009": {"value": "", "id": 500009, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500008": {"value": "f", "id": 500008, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500001": {"value": "tert", "id": 500001, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500003": {"value": "vl", "id": 500003, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500002": {"value": "aaa", "id": 500002, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500005": {"value": "a", "id": 500005, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500004": {"value": "b", "id": 500004, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500007": {"value": "s", "id": 500007, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500006": {"value": "-3", "id": 500006, "meta_id": 4, "ve": {"ver_type": "none", "version": 2}}, "500018": {"value": "rrrrrrrrrrrrrrrr", "id": 500018, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500019": {"value": "", "id": 500019, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500012": {"value": "", "id": 500012, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500013": {"value": "\\u3063\\u3063\\u3063\\u3063d", "id": 500013, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "500010": {"value": "", "id": 500010, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500011": {"value": "", "id": 500011, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500016": {"value": "sssssssssssssssssssssss", "id": 500016, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500017": {"value": "", "id": 500017, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500014": {"value": "", "id": 500014, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500015": {"value": "", "id": 500015, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}}, "objects": {"500002": {"ve": {"ver_type": "none", "version": 2}, "bound": {"y": 100, "x": 313, "height": 50, "width": 50}, "id": 500002, "diagram": null, "meta_id": 3, "properties": [{"children": [500004], "meta_id": 1}]}, "500008": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 113, "x": 380, "height": 50, "width": 50}, "id": 500008, "diagram": null, "meta_id": 1, "properties": [{"children": [500012], "meta_id": 1}]}, "500009": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 113, "x": 161, "height": 50, "width": 50}, "id": 500009, "diagram": null, "meta_id": 1, "properties": [{"children": [500013], "meta_id": 1}]}, "500001": {"ve": {"ver_type": "none", "version": 2}, "bound": {"y": 42, "x": 86, "height": 50, "width": 50}, "id": 500001, "diagram": null, "meta_id": 1, "properties": [{"children": [500002], "meta_id": 1}]}, "500012": {"ve": {"ver_type": "none", "version": 4}, "bound": {"y": 25, "x": 53, "height": 50, "width": 50}, "id": 500012, "diagram": null, "meta_id": 1, "properties": [{"children": [500016], "meta_id": 1}]}, "500003": {"ve": {"ver_type": "none", "version": 2}, "bound": {"y": 100, "x": 68, "height": 50, "width": 50}, "id": 500003, "diagram": null, "meta_id": 3, "properties": [{"children": [500005], "meta_id": 1}]}, "500011": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 20, "x": 357, "height": 50, "width": 50}, "id": 500011, "diagram": null, "meta_id": 1, "properties": [{"children": [500015], "meta_id": 1}]}, "500005": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 64, "x": 243, "height": 50, "width": 50}, "id": 500005, "diagram": null, "meta_id": 1, "properties": [{"children": [500009], "meta_id": 1}]}, "500010": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 116, "x": 583, "height": 50, "width": 50}, "id": 500010, "diagram": null, "meta_id": 1, "properties": [{"children": [500014], "meta_id": 1}]}, "500007": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 162, "x": 344, "height": 50, "width": 50}, "id": 500007, "diagram": null, "meta_id": 1, "properties": [{"children": [500011], "meta_id": 1}]}, "500006": {"ve": {"ver_type": "none", "version": 3}, "bound": {"y": 81, "x": 453, "height": 50, "width": 50}, "id": 500006, "diagram": null, "meta_id": 1, "properties": [{"children": [500010], "meta_id": 1}]}}, "current_version": "4", "root": 500001, "id": 8, "diagrams": {"500001": {"relationships": [], "ve": {"ver_type": "none", "version": 2}, "id": 500001, "objects": [500001], "meta_id": 1, "properties": [{"children": [500001], "meta_id": 1}]}, "500003": {"relationships": [500013, 500014, 500015, 500016, 500017, 500018, 500019], "ve": {"ver_type": "none", "version": 4}, "id": 500003, "objects": [500005, 500006, 500007, 500008, 500009, 500010, 500011, 500012], "meta_id": 1, "properties": [{"children": [500007], "meta_id": 1}]}, "500002": {"relationships": [500004], "ve": {"ver_type": "none", "version": 2}, "id": 500002, "objects": [500002, 500003], "meta_id": 2, "properties": [{"children": [500003], "meta_id": 1}]}, "500004": {"relationships": [], "ve": {"ver_type": "none", "version": 3}, "id": 500004, "objects": [], "meta_id": 2, "properties": [{"children": [500008], "meta_id": 1}]}}}', 18, 8, 3);
INSERT INTO `ProjectInfo` (`id`, `name`, `xml`, `metamodel_id`, `rep_id`, `group_id`) VALUES
(51, 'uml_572', '{"relationships": {"510003": {"src": 510001, "ve": {"ver_type": "none", "version": 1}, "dest": 510002, "properties": [{"children": [510005], "meta_id": 6}], "points": [], "meta_id": 4, "id": 510003}, "510005": {"src": 510004, "ve": {"ver_type": "none", "version": 1}, "dest": 510001, "properties": [{"children": [510006], "meta_id": 6}], "points": [], "meta_id": 4, "id": 510005}, "500017": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500009, "properties": [{"children": [500021], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500017}, "500018": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500011, "properties": [{"children": [500022], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500018}, "500019": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500006, "properties": [{"children": [500023], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500019}, "500013": {"src": 500012, "ve": {"ver_type": "none", "version": 1}, "dest": 500005, "properties": [{"children": [500017], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500013}, "500016": {"src": 500006, "ve": {"ver_type": "none", "version": 1}, "dest": 500011, "properties": [{"children": [500020], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500016}, "500004": {"src": 500003, "ve": {"ver_type": "none", "version": 1}, "dest": 500002, "properties": [{"children": [500006], "meta_id": 4}], "points": [], "meta_id": 2, "id": 500004}, "500014": {"src": 500005, "ve": {"ver_type": "none", "version": 1}, "dest": 500008, "properties": [{"children": [500018], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500014}, "500015": {"src": 500008, "ve": {"ver_type": "none", "version": 1}, "dest": 500006, "properties": [{"children": [500019], "meta_id": 1}], "points": [], "meta_id": 1, "id": 500015}}, "properties": {"500023": {"value": "", "id": 500023, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500022": {"value": "", "id": 500022, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500021": {"value": "", "id": 500021, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500020": {"value": "", "id": 500020, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500009": {"value": "", "id": 500009, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500008": {"value": "f", "id": 500008, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500001": {"value": "tert", "id": 500001, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500003": {"value": "vl", "id": 500003, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500002": {"value": "aaa", "id": 500002, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500005": {"value": "a", "id": 500005, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500004": {"value": "b", "id": 500004, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "500007": {"value": "s", "id": 500007, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500006": {"value": "-3", "id": 500006, "meta_id": 4, "ve": {"ver_type": "none", "version": 2}}, "510001": {"value": "aaa", "id": 510001, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}, "510002": {"value": "hhh", "id": 510002, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}, "510003": {"value": "ddd", "id": 510003, "meta_id": 5, "ve": {"ver_type": "none", "version": 5}}, "510004": {"value": "", "id": 510004, "meta_id": 5, "ve": {"ver_type": "none", "version": 5}}, "510005": {"value": "extends", "id": 510005, "meta_id": 6, "ve": {"ver_type": "none", "version": 5}}, "510006": {"value": "", "id": 510006, "meta_id": 6, "ve": {"ver_type": "none", "version": 5}}, "510007": {"value": "", "id": 510007, "meta_id": 1, "ve": {"ver_type": "none", "version": 5}}, "500018": {"value": "rrrrrrrrrrrrrrrr", "id": 500018, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500019": {"value": "", "id": 500019, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500012": {"value": "", "id": 500012, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500013": {"value": "\\u3063\\u3063\\u3063\\u3063d", "id": 500013, "meta_id": 1, "ve": {"ver_type": "none", "version": 4}}, "500010": {"value": "", "id": 500010, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500011": {"value": "", "id": 500011, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500016": {"value": "sssssssssssssssssssssss", "id": 500016, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500017": {"value": "", "id": 500017, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500014": {"value": "", "id": 500014, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "500015": {"value": "", "id": 500015, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}}, "objects": {"500001": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": 0}, "bound": {"y": 42, "x": 86, "height": 0, "width": 0}, "properties": [{"children": [500002], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500001}, "500002": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": 0}, "bound": {"y": 100, "x": 313, "height": 0, "width": 0}, "properties": [{"children": [500004], "meta_id": 1}], "diagram": null, "meta_id": 3, "id": 500002}, "510001": {"ve": {"ver_type": "none", "version": 5}, "ofd": {"z": 0}, "bound": {"y": 134, "x": 359, "height": 30, "width": 42}, "properties": [{"children": [510003], "meta_id": 5}], "diagram": null, "meta_id": 4, "id": 510001}, "510002": {"ve": {"ver_type": "none", "version": 5}, "ofd": {"z": 0}, "bound": {"y": 46, "x": 541, "height": 30, "width": 42}, "properties": [{"children": [510004], "meta_id": 5}], "diagram": null, "meta_id": 4, "id": 510002}, "510004": {"ve": {"ver_type": "none", "version": 5}, "ofd": {"z": 0}, "bound": {"y": 160, "x": 60, "height": 42, "width": 42}, "properties": [], "diagram": null, "meta_id": 5, "id": 510004}, "510006": {"ve": {"ver_type": "none", "version": 5}, "ofd": {"z": 0}, "bound": {"y": 96, "x": 147, "height": 50, "width": 50}, "properties": [{"children": [510007], "meta_id": 1}], "diagram": null, "meta_id": 3, "id": 510006}, "500009": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 113, "x": 161, "height": 0, "width": 0}, "properties": [{"children": [500013], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500009}, "500008": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 113, "x": 380, "height": 0, "width": 0}, "properties": [{"children": [500012], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500008}, "500012": {"ve": {"ver_type": "none", "version": 5}, "ofd": {"z": 0}, "bound": {"y": 20, "x": 59, "height": 30, "width": 194}, "properties": [{"children": [500016], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500012}, "500003": {"ve": {"ver_type": "none", "version": 5}, "ofd": {"z": 0}, "bound": {"y": 24, "x": 185, "height": 30, "width": 42}, "properties": [{"children": [500005], "meta_id": 1}], "diagram": null, "meta_id": 3, "id": 500003}, "500011": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 20, "x": 357, "height": 0, "width": 0}, "properties": [{"children": [500015], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500011}, "500005": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 64, "x": 243, "height": 0, "width": 0}, "properties": [{"children": [500009], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500005}, "500010": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 116, "x": 583, "height": 0, "width": 0}, "properties": [{"children": [500014], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500010}, "500007": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 162, "x": 344, "height": 0, "width": 0}, "properties": [{"children": [500011], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500007}, "500006": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 81, "x": 453, "height": 0, "width": 0}, "properties": [{"children": [500010], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 500006}}, "current_version": "5", "root": 510001, "id": 8, "diagrams": {"510001": {"relationships": [], "ve": {"ver_type": "none", "version": 5}, "id": 510001, "objects": [], "meta_id": 1, "properties": [{"children": [510001], "meta_id": 1}]}, "510002": {"relationships": [510003, 510005], "ve": {"ver_type": "none", "version": 5}, "id": 510002, "objects": [510001, 510002, 510004], "meta_id": 3, "properties": [{"children": [510002], "meta_id": 1}]}, "500001": {"relationships": [], "ve": {"ver_type": "none", "version": 2}, "id": 500001, "objects": [500001], "meta_id": 1, "properties": [{"children": [500001], "meta_id": 1}]}, "500003": {"relationships": [500013, 500014, 500015, 500016, 500017, 500018, 500019], "ve": {"ver_type": "none", "version": 4}, "id": 500003, "objects": [500005, 500006, 500007, 500008, 500009, 500010, 500011, 500012], "meta_id": 1, "properties": [{"children": [500007], "meta_id": 1}]}, "500002": {"relationships": [500004], "ve": {"ver_type": "none", "version": 5}, "id": 500002, "objects": [500002, 500003, 510006], "meta_id": 2, "properties": [{"children": [500003], "meta_id": 1}]}, "500004": {"relationships": [], "ve": {"ver_type": "none", "version": 3}, "id": 500004, "objects": [], "meta_id": 2, "properties": [{"children": [500008], "meta_id": 1}]}}}', 18, 8, 3),
(52, 'uml_573', '{"relationships": {"520009": {"src": 520008, "ve": {"ver_type": "none", "version": 1}, "dest": 520007, "properties": [{"children": [520009], "meta_id": 6}], "points": [], "meta_id": 4, "id": 520009}, "520006": {"src": 520004, "ve": {"ver_type": "none", "version": 1}, "dest": 520001, "properties": [{"children": [520006], "meta_id": 1}], "points": [], "meta_id": 1, "id": 520006}, "520005": {"src": 520004, "ve": {"ver_type": "none", "version": 1}, "dest": 520003, "properties": [{"children": [520005], "meta_id": 1}], "points": [], "meta_id": 1, "id": 520005}}, "properties": {"520009": {"value": "extends", "id": 520009, "meta_id": 6, "ve": {"ver_type": "none", "version": 4}}, "520008": {"value": "", "id": 520008, "meta_id": 5, "ve": {"ver_type": "none", "version": 3}}, "520003": {"value": "\\u4fee\\u5e73", "id": 520003, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "520002": {"value": "\\u5f69\\u83ef", "id": 520002, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "520001": {"value": "test", "id": 520001, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "520007": {"value": "dd", "id": 520007, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "520006": {"value": "", "id": 520006, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "520005": {"value": "", "id": 520005, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "520004": {"value": "\\uff1f\\uff1f\\uff1f", "id": 520004, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}}, "objects": {"520008": {"ve": {"ver_type": "none", "version": 4}, "ofd": {"z": 0}, "bound": {"y": 35, "x": 37, "height": 100, "width": 96}, "properties": [], "diagram": null, "meta_id": 5, "id": 520008}, "520003": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": 0}, "bound": {"y": 129, "x": 267, "height": 30, "width": 42}, "properties": [{"children": [520003], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 520003}, "520002": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": -1}, "bound": {"y": 94, "x": 97, "height": 219, "width": 257}, "properties": [], "diagram": null, "meta_id": 2, "id": 520002}, "520001": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": 0}, "bound": {"y": 130, "x": 174, "height": 30, "width": 42}, "properties": [{"children": [520002], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 520001}, "520007": {"ve": {"ver_type": "none", "version": 4}, "ofd": {"z": 0}, "bound": {"y": 50, "x": 305, "height": 30, "width": 42}, "properties": [{"children": [520008], "meta_id": 5}], "diagram": null, "meta_id": 4, "id": 520007}, "520004": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": 0}, "bound": {"y": 188, "x": 224, "height": 30, "width": 42}, "properties": [{"children": [520004], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 520004}}, "current_version": "4", "root": 520001, "id": 9, "diagrams": {"520002": {"relationships": [520009], "ve": {"ver_type": "none", "version": 4}, "id": 520002, "objects": [520007, 520008], "meta_id": 3, "properties": [{"children": [520007], "meta_id": 1}]}, "520001": {"relationships": [520005, 520006], "ve": {"ver_type": "none", "version": 2}, "id": 520001, "objects": [520001, 520002, 520003, 520004], "meta_id": 1, "properties": [{"children": [520001], "meta_id": 1}]}}}', 18, 9, 3),
(53, 'uml58', '{"relationships": {"530007": {"src": 530002, "ve": {"ver_type": "none", "version": 1}, "dest": 530005, "properties": [{"children": [530007], "meta_id": 1}], "points": [], "meta_id": 1, "id": 530007}, "530004": {"src": 530001, "ve": {"ver_type": "none", "version": 1}, "dest": 530002, "properties": [{"children": [530004], "meta_id": 1}], "points": [], "meta_id": 1, "id": 530004}}, "properties": {"530002": {"value": "aa", "id": 530002, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "530003": {"value": "bb", "id": 530003, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}, "530001": {"value": "class diagram", "id": 530001, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "530006": {"value": "", "id": 530006, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "530007": {"value": "", "id": 530007, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "530004": {"value": "", "id": 530004, "meta_id": 1, "ve": {"ver_type": "none", "version": 2}}, "530005": {"value": "cc", "id": 530005, "meta_id": 1, "ve": {"ver_type": "none", "version": 3}}}, "objects": {"530002": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 134, "x": 333, "height": 30, "width": 42}, "properties": [{"children": [530003], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 530002}, "530003": {"ve": {"ver_type": "none", "version": 2}, "ofd": {"z": -1}, "bound": {"y": 106, "x": 198, "height": 250, "width": 379}, "properties": [], "diagram": null, "meta_id": 2, "id": 530003}, "530001": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 122, "x": 221, "height": 30, "width": 42}, "properties": [{"children": [530002], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 530001}, "530005": {"ve": {"ver_type": "none", "version": 3}, "ofd": {"z": 0}, "bound": {"y": 160, "x": 450, "height": 30, "width": 42}, "properties": [{"children": [530005], "meta_id": 1}], "diagram": null, "meta_id": 1, "id": 530005}}, "current_version": "3", "root": 530001, "id": 10, "diagrams": {"530001": {"relationships": [530004, 530007], "ve": {"ver_type": "none", "version": 2}, "id": 530001, "objects": [530001, 530002, 530003, 530005], "meta_id": 1, "properties": [{"children": [530001], "meta_id": 1}]}}}', 18, 10, 3);

-- --------------------------------------------------------

--
-- テーブルの構造 `Template`
--

DROP TABLE IF EXISTS `Template`;
CREATE TABLE IF NOT EXISTS `Template` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(32) NOT NULL,
  `path` tinytext NOT NULL,
  `content` mediumtext NOT NULL,
  `metamodel_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=79 ;

--
-- テーブルのデータをダンプしています `Template`
--

INSERT INTO `Template` (`id`, `name`, `path`, `content`, `metamodel_id`) VALUES
(32, 'mdlnxtproj.h', 'mdlnxtproj.h', '#ifndef MAIN_H_\n#define MAIN_H_\n#include <t_services.h>\n#ifndef _MACRO_ONLY\nextern void TaskMain(VP_INT exinf);\nextern void TaskEvent(VP_INT exinf);\nextern void cyc0(VP_INT exinf);\n#endif /* _MACRO_ONLY */\n#endif /*MAIN_H_*/', 16),
(33, 'state.cpp.mako', 'state.cpp.mako', '#include"c_${root.id}.h"\n\nc_${root.id}::c_${root.id}() {\n  current_state = 0;\n  eventManager.addSTM(this);\n}\n\nc_${root.id}::~c_${root.id}() {\n\n}\n\n\n<%\nstate_no = {}\ncnt = 1\nstate_no[str(root.start[0].id)] = 0\nfor i in root.state:\n    state_no[str(i.id)] = cnt\n    cnt = cnt + 1\nendfor\n\nmatrix = [''STATE_IGNORE''] * (len(root.state) + 1) * 9\nfor i in root.transition:\n    if i.event[0].value == ''none'':\n       event_no = 0\n    elif i.event[0].value == ''touch'':\n       event_no = 1\n    elif i.event[0].value == ''white'':\n       event_no = 2\n    elif i.event[0].value == ''black'':\n       event_no = 3\n    elif i.event[0].value == ''userdefine1'':\n       event_no = 4\n    elif i.event[0].value == ''userdefine2'':\n       event_no = 5\n    else:\n        event_no = 0\n    matrix[state_no[str(i.src.id)] * 9 + event_no] = ''STATE_''+str(i.dest.id)\n%>\n\nconst int matrix_${root.id}[] = {\n% for i in range(len(matrix)):\n%    if i == len(matrix) - 1:\nc${root.id}_${matrix[i]}\n%    else:\nc${root.id}_${matrix[i]},\n%    endif\n% endfor\n};\n\nint c_${root.id}::execute(int event) {\n    int next_state = matrix_${root.id}[current_state * 9 + event];\n    if(next_state == -1) return 0;\n    print("c_${root.id}");\n    current_state = next_state;\n    switch(current_state) {\n% for i in root.state:\n  case c${root.id}_STATE_${i.id}:\n           sys_${i.action[0].value}();\n  break;\n% endfor\n   }\n   return 0;\n}', 16),
(34, 'main.h.mako', 'main.h.mako', '#include "c_${root.statediagram.id}.h"\n#include "EventManager.h"\n\n#define NULL (0)\n\n#define STATE_CLASS c_${root.statediagram.id}\n#define EVENT_none 0\n#define EVENT_touch 1\n#define EVENT_white 2\n#define EVENT_black 3\n#define EVENT_release 4\n#define EVENT_touch2 5\n#define EVENT_release2 6\n#define EVENT_gray 7\n#define EVENT_sonar 8\n#define EVENT_userdefine1 9\n#define EVENT_userdefine2 9\n#define EVENT_NUM 9\n\nextern "C"\n{\n  void sys_stop();\n  void sys_go();\n  void sys_right();\n  void sys_left();\n  void sys_();\n  void print(char *);\n  void clock_wait(int t);\n  void sys_userdefine1();\n  void sys_userdefine2();\n}\n', 16),
(35, 'mdlnxtproj.cfg', 'mdlnxtproj.cfg', '#define _MACRO_ONLY\n#include "../../toppers_jsp/systask/cxxrt.cfg"\n#include "mdlnxtproj.h"\nINCLUDE("\\"mdlnxtproj.h\\"");\nCRE_TSK(TSK0, { TA_HLNG | TA_ACT, TSK0, TaskMain, 2, 512, NULL });\nCRE_TSK(TSK1, { TA_HLNG, TSK1, TaskEvent, 1, 512, NULL});\nCRE_CYC(CYC0, {TA_HLNG | TA_STA, 0 ,cyc0, 10,0} );\nDEF_INH(IRQ_PWM_PID, { TA_HLNG, jsp_systick_low_priority });\n#include "at91sam7s.h"\nINCLUDE("\\"at91sam7s.h\\"");', 16),
(36, 'state.h.mako', 'state.h.mako', '#ifndef c_${root.id}_H_\n#define c_${root.id}_H_\n#include "main.h"\n#include"StateMachine.h"\n\n<% state_no = {} %>\\\n<% cnt = 1 %>\n% for i in root.state:\n#define c${root.id}_STATE_${i.id} ${cnt}\n<% state_no[str(i.id)] = cnt %>\\\n<% cnt = cnt + 1 %>\\\n%endfor\n\n#define c${root.id}_STATE_IGNORE -1\n\nclass c_${root.id} : public StateMachine {\n  public:\n    c_${root.id}();\n    ~c_${root.id}();\n    int execute(int event);\n};\n\n#endif', 16),
(37, 'Makefile', 'Makefile', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak\n', 16),
(38, 'Makefile.mako', 'Makefile.mako', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak', 16),
(39, 'EventManager.h', 'EventManager.h', '#ifndef _EVENTMANAGER_H_\n#define _EVENTMANAGER_H_\n#include"StateMachine.h"\n#include "main.h"\n\nclass Event {\npublic:\nint event_id;\nEvent *next;\nEvent(int id) {\n  event_id = id;\n}\n};\n\nclass EventManager {\n  private:\n\n    Event *head;\n    Event *deq()\n    {\n      if(head == NULL) return NULL;\n      Event *p = head;\n      head = p->next;\n      p->next = NULL;\n      return p;\n    }\n    void enq(Event *new_e) {\n      if(head == NULL) {\n        head = new_e;\n        head->next = NULL;\n      }else{\n        Event *e = head;\n        while(e->next != NULL){\n          e->next = new_e;\n          e->next->next = NULL;\n        }\n        \n      }\n    }\n    int stm_len;\n    StateMachine *stms[16];\n  public:\n    EventManager() {\n      stm_len = 0;\n      head = NULL;\n    }\n    void addSTM(StateMachine *stm) {\n      stms[stm_len] = stm;\n      stm_len++;\n    }\n\n    void sendEvent(int event_id) {\n      Event *e = new Event(event_id);\n      enq(e);\n    }\n\n    void execute() {\n      int ret_code = 0;\n      while(ret_code == 0) {\n        Event *e = deq();\n        if(e != NULL) {\n          for(int i=0;i < stm_len;i++) {\n            ret_code = stms[i]->execute(e->event_id);\n          }\n        }else{\n          clock_wait(20);\n        }\n      }\n    }\n};\n\nextern EventManager eventManager;\n#endif\n', 16),
(40, 'StateMachine.h', 'StateMachine.h', '#ifndef _STATEMACHINE_H_\n#define _STATEMACHINE_H_\n\nclass StateMachine {\n  private:\nprotected:\n    int current_state;\n  public:\n    StateMachine(){}\n    ~StateMachine(){}\n    virtual int execute(int event) = 0;\n};\n\n#endif\n', 16),
(41, 'main.cpp', 'main.cpp', '#include <LightSensor.h>\n#include <TouchSensor.h>\n#include <SonarSensor.h>\n#include <Motor.h>\n#include <LegoLight.h>\n#include <Nxt.h>\n#include <Clock.h>\n#include <Lcd.h>\n\n//system\n#include "main.h"\n#include "EventManager.h"\n\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ é–‹å§‹\n********************/\n\n//ã‚¨ãƒ³ãƒˆãƒªãƒ¼ãƒã‚¤ãƒ³ãƒˆã¨ãªã‚‹ã‚¯ãƒ©ã‚¹ã‚’æŒ‡å®š\n#define mdlEntryPoint Controller\n\n//#define CALIBRATION_MODE\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ã€€çµ‚äº†\n********************/\n\n\nusing namespace ecrobot;\n\n\n\nextern "C"\n{\n#include "kernel.h"\n#include "kernel_id.h"\n#include "ecrobot_interface.h"\n\n/*\n  ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆå§‹ã¾ã‚Šï¼‰\n*/\nTouchSensor touch1(PORT_1);\nTouchSensor touch2(PORT_2);\nLightSensor light(PORT_3);\nSonarSensor sonar(PORT_4);\n\nMotor motorA(PORT_A);\nMotor motorC(PORT_C);\nLegoLight legolight(PORT_B);\nNxt nxt;\nClock clock1;\nLcd lcd;\n\n\n/*\n  ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆçµ‚ã‚ã‚Šï¼‰\n*/\n\nEventManager eventManager;\n\n/*\n action\n*/\nvoid sys_stop() {\n  motorA.setPWM(0);\n  motorC.setPWM(0);\n}\n\nvoid sys_go() {\n  motorA.setPWM(50);\n  motorC.setPWM(50);\n}\n\nvoid sys_right() {\n  motorA.setPWM(50);\n  motorC.setPWM(0);\n}\n\nvoid sys_left() {\n  motorA.setPWM(0);\n  motorC.setPWM(50);\n}\n\nvoid sys_() {\n  // dummy function\n}\n\nvoid print(char *s) {\n  lcd.putf("s", s);\n}\n\nvoid clock_wait(int t) {\nclock1.wait(t);\n}\n\nvoid sys_userdefine1() {\neventManager.sendEvent(EVENT_userdefine1);\n}\n\nvoid sys_userdefine2() {\neventManager.sendEvent(EVENT_userdefine2);\n}\n\n/*\n event\n*/\nvoid generate_external_LightWhite() {\neventManager.sendEvent(EVENT_white);\n}\n\nvoid generate_external_LightBlack() {\neventManager.sendEvent(EVENT_black);\n}\n\nvoid generate_external_TouchPress() {\neventManager.sendEvent(EVENT_touch);\n}\n\n\n/*\nDeclareCounter(SysTimerCnt);\nDeclareTask(TaskMain);\nDeclareTask(TaskEvent);\nDeclareAlarm(cyclic_alarm1);\nDeclareEvent(EventSleep);\nDeclareEvent(EventSleepI2C);\n*/\n\n/* nxtOSEK hook to be invoked from an ISR in category 2 */\n/*void user_1ms_isr_type2(void)\n{\n  (void)SignalCounter(SysTimerCnt); // Alarm counter\n  SleeperMonitor(); // needed for I2C device and Clock classes\n}\n*/\nvoid jsp_systick_low_priority(void)\n{\n    if (get_OS_flag()) /* check whether JSP already started or not */\n    {\n        isig_tim();          /* cyclic task dispatcher */\n        check_NXT_buttons();\n    }\n}\n\n                             \nvoid cyc0(VP_INT exinf)\n{\n  iact_tsk(TSK1);\n}\n\n                             \n\n  \nint sonacnt;\n\n\nvoid TaskMain(VP_INT exinf)\n{\n  lcd.clear();\n  StateMachine *stm = new STATE_CLASS();\n  eventManager.addSTM(stm);\n  eventManager.sendEvent(EVENT_none);\n\n  sonacnt = 0;\n  while(true)\n  {\n    eventManager.execute();\n  }\n    ext_tsk();\n}\n\n#define WHITE 580\n#define GRAY 480\n#define GRAY_MAX (GRAY + 8)\n#define GRAY_MIN (GRAY - 8)\n#define BLACK 320\n#define EDGE_COLOR ((GRAY + WHITE) / 2)\n\n#define LIGHT_STATUS_BLACK 0\n#define LIGHT_STATUS_GRAY 1\n#define LIGHT_STATUS_WHITE 2\nint prev_light_status = LIGHT_STATUS_GRAY;\n\n#define TOUCH_STATUS_NOT_PRESS 0\n#define TOUCH_STATUS_PRESS 1\nint prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n  \n#define TOUCH_STATUS_NOT_PRESS_2 0\n#define TOUCH_STATUS_PRESS_2 1\nint prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n\n#define SONAR_STATUS_SMALL_10 0\n#define SONAR_STATUS_NOT_SMALL_10 1\nint prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n\n#ifdef CALIBRATION_MODE\n\nvoid TaskEvent(VP_INT exinf)\n{\n  lcd.clear();\n  lcd.putf("s", "lig=");\n  S16 n = light.getBrightness();\n  lcd.putf("d", n);\n  lcd.disp();\n//  TerminateTask();\n    ext_tsk();\n}\n\n#else\n\n\nint gray_count = 0;\n\nvoid TaskEvent(VP_INT exinf)\n{\n  S16 value = light.getBrightness();\n\n  if(GRAY_MIN < value && value < GRAY_MAX){\n    gray_count++;\n    if(gray_count > 15) {\n      gray_count = 0;\n//      generate_external_GrayMarker(NULL);\n      lcd.putf("s", "GrayMarker\\n");\n//      lightOn();\n    }\n  }\n\n  if(value > EDGE_COLOR)\n  {\n    if(prev_light_status != LIGHT_STATUS_WHITE)\n    {\n      //generate signal\n      generate_external_LightWhite();\n//      lcd.putf("s", "LightWhite\\n");\n    }\n    prev_light_status = LIGHT_STATUS_WHITE;\n  }\n  else if(value=EDGE_COLOR)\n  {\n    if(prev_light_status != LIGHT_STATUS_BLACK)\n    {\n      //generate signal\n      generate_external_LightBlack();\n//      lcd.putf("s", "LightBlack\\n");\n    }\n    prev_light_status = LIGHT_STATUS_BLACK;\n  }\n  else\n  {\n    prev_light_status = LIGHT_STATUS_GRAY;\n  }\n\n  if(touch1.isPressed())\n  {\n///    lcd.putf("s", "press");\n    if(prev_touch_status != TOUCH_STATUS_PRESS)\n    {\n      generate_external_TouchPress();\n      lcd.putf("s", "TouchPress\\n");\n    }\n    prev_touch_status = TOUCH_STATUS_PRESS;\n  }\n  else\n  {\n//    lcd.putf("s", "not press");\n    if(prev_touch_status != TOUCH_STATUS_NOT_PRESS)\n    {\n//      generate_external_TouchNotPress(NULL);\n    }\n    prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n  }\n\n  if(touch2.isPressed())\n  {\n///    lcd.putf("s", "press");\n    if(prev_touch_status_2 != TOUCH_STATUS_PRESS_2)\n    {\n//      generate_external_TouchPress2(NULL);\n      lcd.putf("s", "TouchPress2\\n");\n    }\n    prev_touch_status_2 = TOUCH_STATUS_PRESS_2;\n  }\n  else\n  {\n//    lcd.putf("s", "not press");\n    if(prev_touch_status_2 != TOUCH_STATUS_NOT_PRESS_2)\n    {\n//      generate_external_TouchNotPress2(NULL);\n    }\n    prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n  }\n  \n  sonacnt++;\n  if(10 < sonacnt)\n  {\n    sonacnt = 0;\n    if(sonar.getDistance() < 10)\n    {\n      if(prev_sonar_status != SONAR_STATUS_SMALL_10)\n      {\n//        generate_external_Sonar(NULL);\n        lcd.putf("s", "Sonar\\n");\n      }\n      prev_sonar_status = SONAR_STATUS_SMALL_10;\n    }\n    else\n    {\n      if(prev_sonar_status != SONAR_STATUS_NOT_SMALL_10)\n      {\n//        generate_external_NotSonar(NULL);\n      }\n      prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n    }\n  }\n\n  lcd.disp();\n//    clock1.wait(100);\n//  }\n//  TerminateTask();\n    ext_tsk();\n\n}\n\n#endif\n\n}\n', 16),
(42, 'mdlnxtproj.h', 'mdlnxtproj.h', '#ifndef MAIN_H_\n#define MAIN_H_\n#include <t_services.h>\n#ifndef _MACRO_ONLY\nextern void TaskMain(VP_INT exinf);\nextern void TaskEvent(VP_INT exinf);\nextern void cyc0(VP_INT exinf);\n#endif /* _MACRO_ONLY */\n#endif /*MAIN_H_*/', 16),
(43, 'state.cpp.mako', 'state.cpp.mako', '#include"c_${root.id}.h"\n\nc_${root.id}::c_${root.id}() {\n  current_state = 0;\n  eventManager.addSTM(this);\n}\n\nc_${root.id}::~c_${root.id}() {\n\n}\n\n\n<%\nstate_no = {}\ncnt = 1\nstate_no[str(root.start[0].id)] = 0\nfor i in root.state:\n    state_no[str(i.id)] = cnt\n    cnt = cnt + 1\nendfor\n\nmatrix = [''STATE_IGNORE''] * (len(root.state) + 1) * 9\nfor i in root.transition:\n    if i.event[0].value == ''none'':\n       event_no = 0\n    elif i.event[0].value == ''touch'':\n       event_no = 1\n    elif i.event[0].value == ''white'':\n       event_no = 2\n    elif i.event[0].value == ''black'':\n       event_no = 3\n    elif i.event[0].value == ''userdefine1'':\n       event_no = 4\n    elif i.event[0].value == ''userdefine2'':\n       event_no = 5\n    else:\n        event_no = 0\n    matrix[state_no[str(i.src.id)] * 9 + event_no] = ''STATE_''+str(i.dest.id)\n%>\n\nconst int matrix_${root.id}[] = {\n% for i in range(len(matrix)):\n%    if i == len(matrix) - 1:\nc${root.id}_${matrix[i]}\n%    else:\nc${root.id}_${matrix[i]},\n%    endif\n% endfor\n};\n\nint c_${root.id}::execute(int event) {\n    int next_state = matrix_${root.id}[current_state * 9 + event];\n    if(next_state == -1) return 0;\n    print("c_${root.id}");\n    current_state = next_state;\n    switch(current_state) {\n% for i in root.state:\n  case c${root.id}_STATE_${i.id}:\n           sys_${i.action[0].value}();\n  break;\n% endfor\n   }\n   return 0;\n}', 16),
(44, 'main.h.mako', 'main.h.mako', '#include "c_${root.statediagram.id}.h"\n#include "EventManager.h"\n\n#define NULL (0)\n\n#define STATE_CLASS c_${root.statediagram.id}\n#define EVENT_none 0\n#define EVENT_touch 1\n#define EVENT_white 2\n#define EVENT_black 3\n#define EVENT_release 4\n#define EVENT_touch2 5\n#define EVENT_release2 6\n#define EVENT_gray 7\n#define EVENT_sonar 8\n#define EVENT_userdefine1 9\n#define EVENT_userdefine2 9\n#define EVENT_NUM 9\n\nextern "C"\n{\n  void sys_stop();\n  void sys_go();\n  void sys_right();\n  void sys_left();\n  void sys_();\n  void print(char *);\n  void clock_wait(int t);\n  void sys_userdefine1();\n  void sys_userdefine2();\n}\n', 16),
(45, 'mdlnxtproj.cfg', 'mdlnxtproj.cfg', '#define _MACRO_ONLY\n#include "../../toppers_jsp/systask/cxxrt.cfg"\n#include "mdlnxtproj.h"\nINCLUDE("\\"mdlnxtproj.h\\"");\nCRE_TSK(TSK0, { TA_HLNG | TA_ACT, TSK0, TaskMain, 2, 512, NULL });\nCRE_TSK(TSK1, { TA_HLNG, TSK1, TaskEvent, 1, 512, NULL});\nCRE_CYC(CYC0, {TA_HLNG | TA_STA, 0 ,cyc0, 10,0} );\nDEF_INH(IRQ_PWM_PID, { TA_HLNG, jsp_systick_low_priority });\n#include "at91sam7s.h"\nINCLUDE("\\"at91sam7s.h\\"");', 16),
(46, 'state.h.mako', 'state.h.mako', '#ifndef c_${root.id}_H_\n#define c_${root.id}_H_\n#include "main.h"\n#include"StateMachine.h"\n\n<% state_no = {} %>\\\n<% cnt = 1 %>\n% for i in root.state:\n#define c${root.id}_STATE_${i.id} ${cnt}\n<% state_no[str(i.id)] = cnt %>\\\n<% cnt = cnt + 1 %>\\\n%endfor\n\n#define c${root.id}_STATE_IGNORE -1\n\nclass c_${root.id} : public StateMachine {\n  public:\n    c_${root.id}();\n    ~c_${root.id}();\n    int execute(int event);\n};\n\n#endif', 16),
(47, 'Makefile', 'Makefile', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak\n', 16),
(48, 'Makefile.mako', 'Makefile.mako', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak', 16),
(49, 'EventManager.h', 'EventManager.h', '#ifndef _EVENTMANAGER_H_\n#define _EVENTMANAGER_H_\n#include"StateMachine.h"\n#include "main.h"\n\nclass Event {\npublic:\nint event_id;\nEvent *next;\nEvent(int id) {\n  event_id = id;\n}\n};\n\nclass EventManager {\n  private:\n\n    Event *head;\n    Event *deq()\n    {\n      if(head == NULL) return NULL;\n      Event *p = head;\n      head = p->next;\n      p->next = NULL;\n      return p;\n    }\n    void enq(Event *new_e) {\n      if(head == NULL) {\n        head = new_e;\n        head->next = NULL;\n      }else{\n        Event *e = head;\n        while(e->next != NULL){\n          e->next = new_e;\n          e->next->next = NULL;\n        }\n        \n      }\n    }\n    int stm_len;\n    StateMachine *stms[16];\n  public:\n    EventManager() {\n      stm_len = 0;\n      head = NULL;\n    }\n    void addSTM(StateMachine *stm) {\n      stms[stm_len] = stm;\n      stm_len++;\n    }\n\n    void sendEvent(int event_id) {\n      Event *e = new Event(event_id);\n      enq(e);\n    }\n\n    void execute() {\n      int ret_code = 0;\n      while(ret_code == 0) {\n        Event *e = deq();\n        if(e != NULL) {\n          for(int i=0;i < stm_len;i++) {\n            ret_code = stms[i]->execute(e->event_id);\n          }\n        }else{\n          clock_wait(20);\n        }\n      }\n    }\n};\n\nextern EventManager eventManager;\n#endif\n', 16),
(50, 'StateMachine.h', 'StateMachine.h', '#ifndef _STATEMACHINE_H_\n#define _STATEMACHINE_H_\n\nclass StateMachine {\n  private:\nprotected:\n    int current_state;\n  public:\n    StateMachine(){}\n    ~StateMachine(){}\n    virtual int execute(int event) = 0;\n};\n\n#endif\n', 16),
(51, 'main.cpp', 'main.cpp', '#include <LightSensor.h>\n#include <TouchSensor.h>\n#include <SonarSensor.h>\n#include <Motor.h>\n#include <LegoLight.h>\n#include <Nxt.h>\n#include <Clock.h>\n#include <Lcd.h>\n\n//system\n#include "main.h"\n#include "EventManager.h"\n\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ é–‹å§‹\n********************/\n\n//ã‚¨ãƒ³ãƒˆãƒªãƒ¼ãƒã‚¤ãƒ³ãƒˆã¨ãªã‚‹ã‚¯ãƒ©ã‚¹ã‚’æŒ‡å®š\n#define mdlEntryPoint Controller\n\n//#define CALIBRATION_MODE\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ã€€çµ‚äº†\n********************/\n\n\nusing namespace ecrobot;\n\n\n\nextern "C"\n{\n#include "kernel.h"\n#include "kernel_id.h"\n#include "ecrobot_interface.h"\n\n/*\n  ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆå§‹ã¾ã‚Šï¼‰\n*/\nTouchSensor touch1(PORT_1);\nTouchSensor touch2(PORT_2);\nLightSensor light(PORT_3);\nSonarSensor sonar(PORT_4);\n\nMotor motorA(PORT_A);\nMotor motorC(PORT_C);\nLegoLight legolight(PORT_B);\nNxt nxt;\nClock clock1;\nLcd lcd;\n\n\n/*\n  ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆçµ‚ã‚ã‚Šï¼‰\n*/\n\nEventManager eventManager;\n\n/*\n action\n*/\nvoid sys_stop() {\n  motorA.setPWM(0);\n  motorC.setPWM(0);\n}\n\nvoid sys_go() {\n  motorA.setPWM(50);\n  motorC.setPWM(50);\n}\n\nvoid sys_right() {\n  motorA.setPWM(50);\n  motorC.setPWM(0);\n}\n\nvoid sys_left() {\n  motorA.setPWM(0);\n  motorC.setPWM(50);\n}\n\nvoid sys_() {\n  // dummy function\n}\n\nvoid print(char *s) {\n  lcd.putf("s", s);\n}\n\nvoid clock_wait(int t) {\nclock1.wait(t);\n}\n\nvoid sys_userdefine1() {\neventManager.sendEvent(EVENT_userdefine1);\n}\n\nvoid sys_userdefine2() {\neventManager.sendEvent(EVENT_userdefine2);\n}\n\n/*\n event\n*/\nvoid generate_external_LightWhite() {\neventManager.sendEvent(EVENT_white);\n}\n\nvoid generate_external_LightBlack() {\neventManager.sendEvent(EVENT_black);\n}\n\nvoid generate_external_TouchPress() {\neventManager.sendEvent(EVENT_touch);\n}\n\n\n/*\nDeclareCounter(SysTimerCnt);\nDeclareTask(TaskMain);\nDeclareTask(TaskEvent);\nDeclareAlarm(cyclic_alarm1);\nDeclareEvent(EventSleep);\nDeclareEvent(EventSleepI2C);\n*/\n\n/* nxtOSEK hook to be invoked from an ISR in category 2 */\n/*void user_1ms_isr_type2(void)\n{\n  (void)SignalCounter(SysTimerCnt); // Alarm counter\n  SleeperMonitor(); // needed for I2C device and Clock classes\n}\n*/\nvoid jsp_systick_low_priority(void)\n{\n    if (get_OS_flag()) /* check whether JSP already started or not */\n    {\n        isig_tim();          /* cyclic task dispatcher */\n        check_NXT_buttons();\n    }\n}\n\n                             \nvoid cyc0(VP_INT exinf)\n{\n  iact_tsk(TSK1);\n}\n\n                             \n\n  \nint sonacnt;\n\n\nvoid TaskMain(VP_INT exinf)\n{\n  lcd.clear();\n  StateMachine *stm = new STATE_CLASS();\n  eventManager.addSTM(stm);\n  eventManager.sendEvent(EVENT_none);\n\n  sonacnt = 0;\n  while(true)\n  {\n    eventManager.execute();\n  }\n    ext_tsk();\n}\n\n#define WHITE 580\n#define GRAY 480\n#define GRAY_MAX (GRAY + 8)\n#define GRAY_MIN (GRAY - 8)\n#define BLACK 320\n#define EDGE_COLOR ((GRAY + WHITE) / 2)\n\n#define LIGHT_STATUS_BLACK 0\n#define LIGHT_STATUS_GRAY 1\n#define LIGHT_STATUS_WHITE 2\nint prev_light_status = LIGHT_STATUS_GRAY;\n\n#define TOUCH_STATUS_NOT_PRESS 0\n#define TOUCH_STATUS_PRESS 1\nint prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n  \n#define TOUCH_STATUS_NOT_PRESS_2 0\n#define TOUCH_STATUS_PRESS_2 1\nint prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n\n#define SONAR_STATUS_SMALL_10 0\n#define SONAR_STATUS_NOT_SMALL_10 1\nint prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n\n#ifdef CALIBRATION_MODE\n\nvoid TaskEvent(VP_INT exinf)\n{\n  lcd.clear();\n  lcd.putf("s", "lig=");\n  S16 n = light.getBrightness();\n  lcd.putf("d", n);\n  lcd.disp();\n//  TerminateTask();\n    ext_tsk();\n}\n\n#else\n\n\nint gray_count = 0;\n\nvoid TaskEvent(VP_INT exinf)\n{\n  S16 value = light.getBrightness();\n\n  if(GRAY_MIN < value && value < GRAY_MAX){\n    gray_count++;\n    if(gray_count > 15) {\n      gray_count = 0;\n//      generate_external_GrayMarker(NULL);\n      lcd.putf("s", "GrayMarker\\n");\n//      lightOn();\n    }\n  }\n\n  if(value > EDGE_COLOR)\n  {\n    if(prev_light_status != LIGHT_STATUS_WHITE)\n    {\n      //generate signal\n      generate_external_LightWhite();\n//      lcd.putf("s", "LightWhite\\n");\n    }\n    prev_light_status = LIGHT_STATUS_WHITE;\n  }\n  else if(value=EDGE_COLOR)\n  {\n    if(prev_light_status != LIGHT_STATUS_BLACK)\n    {\n      //generate signal\n      generate_external_LightBlack();\n//      lcd.putf("s", "LightBlack\\n");\n    }\n    prev_light_status = LIGHT_STATUS_BLACK;\n  }\n  else\n  {\n    prev_light_status = LIGHT_STATUS_GRAY;\n  }\n\n  if(touch1.isPressed())\n  {\n///    lcd.putf("s", "press");\n    if(prev_touch_status != TOUCH_STATUS_PRESS)\n    {\n      generate_external_TouchPress();\n      lcd.putf("s", "TouchPress\\n");\n    }\n    prev_touch_status = TOUCH_STATUS_PRESS;\n  }\n  else\n  {\n//    lcd.putf("s", "not press");\n    if(prev_touch_status != TOUCH_STATUS_NOT_PRESS)\n    {\n//      generate_external_TouchNotPress(NULL);\n    }\n    prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n  }\n\n  if(touch2.isPressed())\n  {\n///    lcd.putf("s", "press");\n    if(prev_touch_status_2 != TOUCH_STATUS_PRESS_2)\n    {\n//      generate_external_TouchPress2(NULL);\n      lcd.putf("s", "TouchPress2\\n");\n    }\n    prev_touch_status_2 = TOUCH_STATUS_PRESS_2;\n  }\n  else\n  {\n//    lcd.putf("s", "not press");\n    if(prev_touch_status_2 != TOUCH_STATUS_NOT_PRESS_2)\n    {\n//      generate_external_TouchNotPress2(NULL);\n    }\n    prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n  }\n  \n  sonacnt++;\n  if(10 < sonacnt)\n  {\n    sonacnt = 0;\n    if(sonar.getDistance() < 10)\n    {\n      if(prev_sonar_status != SONAR_STATUS_SMALL_10)\n      {\n//        generate_external_Sonar(NULL);\n        lcd.putf("s", "Sonar\\n");\n      }\n      prev_sonar_status = SONAR_STATUS_SMALL_10;\n    }\n    else\n    {\n      if(prev_sonar_status != SONAR_STATUS_NOT_SMALL_10)\n      {\n//        generate_external_NotSonar(NULL);\n      }\n      prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n    }\n  }\n\n  lcd.disp();\n//    clock1.wait(100);\n//  }\n//  TerminateTask();\n    ext_tsk();\n\n}\n\n#endif\n\n}\n', 16),
(52, 'mdlnxtproj.h', 'mdlnxtproj.h', '#ifndef MAIN_H_\n#define MAIN_H_\n#include <t_services.h>\n#ifndef _MACRO_ONLY\nextern void TaskMain(VP_INT exinf);\nextern void TaskEvent(VP_INT exinf);\nextern void cyc0(VP_INT exinf);\n#endif /* _MACRO_ONLY */\n#endif /*MAIN_H_*/', 8),
(53, 'state.cpp.mako', 'state.cpp.mako', '#include"c_${root.id}.h"\n\nc_${root.id}::c_${root.id}() {\n  current_state = 0;\n  eventManager.addSTM(this);\n}\n\nc_${root.id}::~c_${root.id}() {\n\n}\n\n\n<%\nstate_no = {}\ncnt = 1\nstate_no[str(root.start[0].id)] = 0\nfor i in root.state:\n    state_no[str(i.id)] = cnt\n    cnt = cnt + 1\nendfor\n\nmatrix = [''STATE_IGNORE''] * (len(root.state) + 1) * 9\nfor i in root.transition:\n    if i.event[0].value == ''none'':\n       event_no = 0\n    elif i.event[0].value == ''touch'':\n       event_no = 1\n    elif i.event[0].value == ''white'':\n       event_no = 2\n    elif i.event[0].value == ''black'':\n       event_no = 3\n    elif i.event[0].value == ''userdefine1'':\n       event_no = 4\n    elif i.event[0].value == ''userdefine2'':\n       event_no = 5\n    else:\n        event_no = 0\n    matrix[state_no[str(i.src.id)] * 9 + event_no] = ''STATE_''+str(i.dest.id)\n%>\n\nconst int matrix_${root.id}[] = {\n% for i in range(len(matrix)):\n%    if i == len(matrix) - 1:\nc${root.id}_${matrix[i]}\n%    else:\nc${root.id}_${matrix[i]},\n%    endif\n% endfor\n};\n\nint c_${root.id}::execute(int event) {\n    int next_state = matrix_${root.id}[current_state * 9 + event];\n    if(next_state == -1) return 0;\n    print("c_${root.id}");\n    current_state = next_state;\n    switch(current_state) {\n% for i in root.state:\n  case c${root.id}_STATE_${i.id}:\n           sys_${i.action[0].value}();\n  break;\n% endfor\n   }\n   return 0;\n}', 8),
(54, 'main.h.mako', 'main.h.mako', '#include "c_${root.statediagram.id}.h"\n#include "EventManager.h"\n//æ—¥æœ¬èªž\n#define NULL (0)\n\n#define STATE_CLASS c_${root.statediagram.id}\n#define EVENT_none 0\n#define EVENT_touch 1\n#define EVENT_white 2\n#define EVENT_black 3\n#define EVENT_release 4\n#define EVENT_touch2 5\n#define EVENT_release2 6\n#define EVENT_gray 7\n#define EVENT_sonar 8\n#define EVENT_userdefine1 9\n#define EVENT_userdefine2 9\n#define EVENT_NUM 9\n\nextern "C"\n{\n  void sys_stop();\n  void sys_go();\n  void sys_right();\n  void sys_left();\n  void sys_();\n  void print(char *);\n  void clock_wait(int t);\n  void sys_userdefine1();\n  void sys_userdefine2();\n}\n', 8),
(55, 'mdlnxtproj.cfg', 'mdlnxtproj.cfg', '#define _MACRO_ONLY\n#include "../../toppers_jsp/systask/cxxrt.cfg"\n#include "mdlnxtproj.h"\nINCLUDE("\\"mdlnxtproj.h\\"");\nCRE_TSK(TSK0, { TA_HLNG | TA_ACT, TSK0, TaskMain, 2, 512, NULL });\nCRE_TSK(TSK1, { TA_HLNG, TSK1, TaskEvent, 1, 512, NULL});\nCRE_CYC(CYC0, {TA_HLNG | TA_STA, 0 ,cyc0, 10,0} );\nDEF_INH(IRQ_PWM_PID, { TA_HLNG, jsp_systick_low_priority });\n#include "at91sam7s.h"\nINCLUDE("\\"at91sam7s.h\\"");', 8),
(56, 'state.h.mako', 'state.h.mako', '#ifndef c_${root.id}_H_\n#define c_${root.id}_H_\n#include "main.h"\n#include"StateMachine.h"\n\n<% state_no = {} %>\\\n<% cnt = 1 %>\n% for i in root.state:\n#define c${root.id}_STATE_${i.id} ${cnt}\n<% state_no[str(i.id)] = cnt %>\\\n<% cnt = cnt + 1 %>\\\n%endfor\n\n#define c${root.id}_STATE_IGNORE -1\n\nclass c_${root.id} : public StateMachine {\n  public:\n    c_${root.id}();\n    ~c_${root.id}();\n    int execute(int event);\n};\n\n#endif', 8),
(57, 'Makefile', 'Makefile', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak\n', 8),
(58, 'Makefile.mako', 'Makefile.mako', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak', 8),
(59, 'EventManager.h', 'EventManager.h', '#ifndef _EVENTMANAGER_H_\n#define _EVENTMANAGER_H_\n#include"StateMachine.h"\n#include "main.h"\n\nclass Event {\npublic:\nint event_id;\nEvent *next;\nEvent(int id) {\n  event_id = id;\n}\n};\n\nclass EventManager {\n  private:\n\n    Event *head;\n    Event *deq()\n    {\n      if(head == NULL) return NULL;\n      Event *p = head;\n      head = p->next;\n      p->next = NULL;\n      return p;\n    }\n    void enq(Event *new_e) {\n      if(head == NULL) {\n        head = new_e;\n        head->next = NULL;\n      }else{\n        Event *e = head;\n        while(e->next != NULL){\n          e->next = new_e;\n          e->next->next = NULL;\n        }\n        \n      }\n    }\n    int stm_len;\n    StateMachine *stms[16];\n  public:\n    EventManager() {\n      stm_len = 0;\n      head = NULL;\n    }\n    void addSTM(StateMachine *stm) {\n      stms[stm_len] = stm;\n      stm_len++;\n    }\n\n    void sendEvent(int event_id) {\n      Event *e = new Event(event_id);\n      enq(e);\n    }\n\n    void execute() {\n      int ret_code = 0;\n      while(ret_code == 0) {\n        Event *e = deq();\n        if(e != NULL) {\n          for(int i=0;i < stm_len;i++) {\n            ret_code = stms[i]->execute(e->event_id);\n          }\n        }else{\n          clock_wait(20);\n        }\n      }\n    }\n};\n\nextern EventManager eventManager;\n#endif\n', 8),
(60, 'StateMachine.h', 'StateMachine.h', '#ifndef _STATEMACHINE_H_\n#define _STATEMACHINE_H_\n\nclass StateMachine {\n  private:\nprotected:\n    int current_state;\n  public:\n    StateMachine(){}\n    ~StateMachine(){}\n    virtual int execute(int event) = 0;\n};\n\n#endif\n', 8),
(61, 'main.cpp', 'main.cpp', '#include <LightSensor.h>\n#include <TouchSensor.h>\n#include <SonarSensor.h>\n#include <Motor.h>\n#include <LegoLight.h>\n#include <Nxt.h>\n#include <Clock.h>\n#include <Lcd.h>\n\n//system\n#include "main.h"\n#include "EventManager.h"\n\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ é–‹å§‹\n********************/\n\n//ã‚¨ãƒ³ãƒˆãƒªãƒ¼ãƒã‚¤ãƒ³ãƒˆã¨ãªã‚‹ã‚¯ãƒ©ã‚¹ã‚’æŒ‡å®š\n#define mdlEntryPoint Controller\n\n//#define CALIBRATION_MODE\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ã€€çµ‚äº†\n********************/\n\n\nusing namespace ecrobot;\n\n\n\nextern "C"\n{\n#include "kernel.h"\n#include "kernel_id.h"\n#include "ecrobot_interface.h"\n\n/*\n  ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆå§‹ã¾ã‚Šï¼‰\n*/\nTouchSensor touch1(PORT_1);\nTouchSensor touch2(PORT_2);\nLightSensor light(PORT_3);\nSonarSensor sonar(PORT_4);\n\nMotor motorA(PORT_A);\nMotor motorC(PORT_C);\nLegoLight legolight(PORT_B);\nNxt nxt;\nClock clock1;\nLcd lcd;\n\n\n/*\n  ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆçµ‚ã‚ã‚Šï¼‰\n*/\n\nEventManager eventManager;\n\n/*\n action\n*/\nvoid sys_stop() {\n  motorA.setPWM(0);\n  motorC.setPWM(0);\n}\n\nvoid sys_go() {\n  motorA.setPWM(50);\n  motorC.setPWM(50);\n}\n\nvoid sys_right() {\n  motorA.setPWM(50);\n  motorC.setPWM(0);\n}\n\nvoid sys_left() {\n  motorA.setPWM(0);\n  motorC.setPWM(50);\n}\n\nvoid sys_() {\n  // dummy function\n}\n\nvoid print(char *s) {\n  lcd.putf("s", s);\n}\n\nvoid clock_wait(int t) {\nclock1.wait(t);\n}\n\nvoid sys_userdefine1() {\neventManager.sendEvent(EVENT_userdefine1);\n}\n\nvoid sys_userdefine2() {\neventManager.sendEvent(EVENT_userdefine2);\n}\n\n/*\n event\n*/\nvoid generate_external_LightWhite() {\neventManager.sendEvent(EVENT_white);\n}\n\nvoid generate_external_LightBlack() {\neventManager.sendEvent(EVENT_black);\n}\n\nvoid generate_external_TouchPress() {\neventManager.sendEvent(EVENT_touch);\n}\n\n\n/*\nDeclareCounter(SysTimerCnt);\nDeclareTask(TaskMain);\nDeclareTask(TaskEvent);\nDeclareAlarm(cyclic_alarm1);\nDeclareEvent(EventSleep);\nDeclareEvent(EventSleepI2C);\n*/\n\n/* nxtOSEK hook to be invoked from an ISR in category 2 */\n/*void user_1ms_isr_type2(void)\n{\n  (void)SignalCounter(SysTimerCnt); // Alarm counter\n  SleeperMonitor(); // needed for I2C device and Clock classes\n}\n*/\nvoid jsp_systick_low_priority(void)\n{\n    if (get_OS_flag()) /* check whether JSP already started or not */\n    {\n        isig_tim();          /* cyclic task dispatcher */\n        check_NXT_buttons();\n    }\n}\n\n                             \nvoid cyc0(VP_INT exinf)\n{\n  iact_tsk(TSK1);\n}\n\n                             \n\n  \nint sonacnt;\n\n\nvoid TaskMain(VP_INT exinf)\n{\n  lcd.clear();\n  StateMachine *stm = new STATE_CLASS();\n  eventManager.addSTM(stm);\n  eventManager.sendEvent(EVENT_none);\n\n  sonacnt = 0;\n  while(true)\n  {\n    eventManager.execute();\n  }\n    ext_tsk();\n}\n\n#define WHITE 580\n#define GRAY 480\n#define GRAY_MAX (GRAY + 8)\n#define GRAY_MIN (GRAY - 8)\n#define BLACK 320\n#define EDGE_COLOR ((GRAY + WHITE) / 2)\n\n#define LIGHT_STATUS_BLACK 0\n#define LIGHT_STATUS_GRAY 1\n#define LIGHT_STATUS_WHITE 2\nint prev_light_status = LIGHT_STATUS_GRAY;\n\n#define TOUCH_STATUS_NOT_PRESS 0\n#define TOUCH_STATUS_PRESS 1\nint prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n  \n#define TOUCH_STATUS_NOT_PRESS_2 0\n#define TOUCH_STATUS_PRESS_2 1\nint prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n\n#define SONAR_STATUS_SMALL_10 0\n#define SONAR_STATUS_NOT_SMALL_10 1\nint prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n\n#ifdef CALIBRATION_MODE\n\nvoid TaskEvent(VP_INT exinf)\n{\n  lcd.clear();\n  lcd.putf("s", "lig=");\n  S16 n = light.getBrightness();\n  lcd.putf("d", n);\n  lcd.disp();\n//  TerminateTask();\n    ext_tsk();\n}\n\n#else\n\n\nint gray_count = 0;\n\nvoid TaskEvent(VP_INT exinf)\n{\n  S16 value = light.getBrightness();\n\n  if(GRAY_MIN < value && value < GRAY_MAX){\n    gray_count++;\n    if(gray_count > 15) {\n      gray_count = 0;\n//      generate_external_GrayMarker(NULL);\n      lcd.putf("s", "GrayMarker\\n");\n//      lightOn();\n    }\n  }\n\n  if(value > EDGE_COLOR)\n  {\n    if(prev_light_status != LIGHT_STATUS_WHITE)\n    {\n      //generate signal\n      generate_external_LightWhite();\n//      lcd.putf("s", "LightWhite\\n");\n    }\n    prev_light_status = LIGHT_STATUS_WHITE;\n  }\n  else if(value=EDGE_COLOR)\n  {\n    if(prev_light_status != LIGHT_STATUS_BLACK)\n    {\n      //generate signal\n      generate_external_LightBlack();\n//      lcd.putf("s", "LightBlack\\n");\n    }\n    prev_light_status = LIGHT_STATUS_BLACK;\n  }\n  else\n  {\n    prev_light_status = LIGHT_STATUS_GRAY;\n  }\n\n  if(touch1.isPressed())\n  {\n///    lcd.putf("s", "press");\n    if(prev_touch_status != TOUCH_STATUS_PRESS)\n    {\n      generate_external_TouchPress();\n      lcd.putf("s", "TouchPress\\n");\n    }\n    prev_touch_status = TOUCH_STATUS_PRESS;\n  }\n  else\n  {\n//    lcd.putf("s", "not press");\n    if(prev_touch_status != TOUCH_STATUS_NOT_PRESS)\n    {\n//      generate_external_TouchNotPress(NULL);\n    }\n    prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n  }\n\n  if(touch2.isPressed())\n  {\n///    lcd.putf("s", "press");\n    if(prev_touch_status_2 != TOUCH_STATUS_PRESS_2)\n    {\n//      generate_external_TouchPress2(NULL);\n      lcd.putf("s", "TouchPress2\\n");\n    }\n    prev_touch_status_2 = TOUCH_STATUS_PRESS_2;\n  }\n  else\n  {\n//    lcd.putf("s", "not press");\n    if(prev_touch_status_2 != TOUCH_STATUS_NOT_PRESS_2)\n    {\n//      generate_external_TouchNotPress2(NULL);\n    }\n    prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n  }\n  \n  sonacnt++;\n  if(10 < sonacnt)\n  {\n    sonacnt = 0;\n    if(sonar.getDistance() < 10)\n    {\n      if(prev_sonar_status != SONAR_STATUS_SMALL_10)\n      {\n//        generate_external_Sonar(NULL);\n        lcd.putf("s", "Sonar\\n");\n      }\n      prev_sonar_status = SONAR_STATUS_SMALL_10;\n    }\n    else\n    {\n      if(prev_sonar_status != SONAR_STATUS_NOT_SMALL_10)\n      {\n//        generate_external_NotSonar(NULL);\n      }\n      prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n    }\n  }\n\n  lcd.disp();\n//    clock1.wait(100);\n//  }\n//  TerminateTask();\n    ext_tsk();\n\n}\n\n#endif\n\n}\n', 8),
(62, 'aa', 'aa', 'sssssssss', 9),
(63, 'ssss', 'ssss', '', 9),
(64, 'sssssss', 'sssssss', '', 9),
(65, 'aa', 'aa', 'sssssssss', 9),
(66, 'ssss', 'ssss', '', 9),
(67, 'sssssss', 'sssssss', '', 9),
(68, 'd', '', 'aaadd', 10),
(69, 'mdlnxtproj.h', '', '#ifndef MAIN_H_\n#define MAIN_H_\n#include \n#ifndef _MACRO_ONLY\nextern void TaskMain(VP_INT exinf);\nextern void TaskEvent(VP_INT exinf);\nextern void cyc0(VP_INT exinf);\n#endif /* _MACRO_ONLY */\n#endif /*MAIN_H_*/', 10),
(70, 'state.cpp.mako', '', '#include"c_${root.id}.h"\n\nc_${root.id}::c_${root.id}() {\n current_state = 0;\n eventManager.addSTM(this);\n}\n\n    \nc_${root.id}::~c_${root.id}() {\n\n}\n\n<%\nstate_no = {}\ncnt = 1\nstate_no[str(root.start[0].id)] = 0\nfor i in root.state:\n    state_no[str(i.id)] = cnt\n    cnt = cnt + 1\nendfor\n%>\n\n<%\n    matrix = [''STATE_IGNORE''] * (len(root.state) + 1) * 9\n    for i in root.transition:\n      if i.event[0].value == ''none'':\n        event_no = 0\n      elif i.event[0].value == ''touch'':\n        event_no = 1\n      elif i.event[0].value == ''white'':\n        event_no = 2\n      elif i.event[0].value == ''black'':\n        event_no = 3\n      elif i.event[0].value == ''userdefine1'':\n        event_no = 4\n      elif i.event[0].value == ''userdefine2'':\n        event_no = 5\n      else:\n        event_no = 0\n        matrix[state_no[str(i.src.id)] * 9 + event_no] = ''STATE_''+str(i.dest.id)\n      endif\n    endfor\n%>\n\nconst int matrix_${root.id}[] = {\n% for i in range(len(matrix)):\n% if i == len(matrix) - 1:\nc${root.id}_${matrix[i]}\n% else:\nc${root.id}_${matrix[i]},\n% endif\n% endfor\n};\n\nint c_${root.id}::execute(int event) {\n int next_state = matrix_${root.id}[current_state * 9 + event];\n if(next_state == -1) return 0;\n print("c_${root.id}");\n current_state = next_state;\n switch(current_state) {\n% for i in root.state:\n case c${root.id}_STATE_${i.id}:\n sys_${i.action[0].value}();\n break;\n% endfor\n }\n return 0;\n}', 10),
(71, 'main.h.mako', '', '#include "c_${root.classdiagram.id}.h"\n#include "EventManager.h"\n//æ—¥æœ¬èªž\n#define NULL (0)\n\n<%\nstate_no = {}\ncnt = 1\na = 0\nb = 0\ncc = []\nfor c in root.classdiagram.klass:\n  cc.append(c)\nendfor\n%>\n\n${a}\n#define STATE_CLASS c_${root.classdiagram.id}\n#define EVENT_none 0\n#define EVENT_touch 1\n#define EVENT_white 2\n#define EVENT_black 3\n#define EVENT_release 4\n#define EVENT_touch2 5\n#define EVENT_release2 6\n#define EVENT_gray 7\n#define EVENT_sonar 8\n#define EVENT_userdefine1 9\n#define EVENT_userdefine2 9\n#define EVENT_NUM 9\n\nextern "C"\n{\n void sys_stop();\n void sys_go();\n void sys_right();\n void sys_left();\n void sys_();\n void print(char *);\n void clock_wait(int t);\n void sys_userdefine1();\n void sys_userdefine2();\n}\n', 10),
(72, 'mdlnxtproj.cfg', '', '#define _MACRO_ONLY\n#include "../../toppers_jsp/systask/cxxrt.cfg"\n#include "mdlnxtproj.h"\nINCLUDE("\\"mdlnxtproj.h\\"");\nCRE_TSK(TSK0, { TA_HLNG | TA_ACT, TSK0, TaskMain, 2, 512, NULL });\nCRE_TSK(TSK1, { TA_HLNG, TSK1, TaskEvent, 1, 512, NULL});\nCRE_CYC(CYC0, {TA_HLNG | TA_STA, 0 ,cyc0, 10,0} );\nDEF_INH(IRQ_PWM_PID, { TA_HLNG, jsp_systick_low_priority });\n#include "at91sam7s.h"\nINCLUDE("\\"at91sam7s.h\\"");', 10),
(73, 'state.h.mako', '', '#ifndef c_${root.id}_H_\n#define c_${root.id}_H_\n#include "main.h"\n#include"StateMachine.h"\n\n\n<%\nstate_no = {}\ncnt = 1\nstate_no[str(root.start[0].id)] = 0\nfor i in root.state:\n    state_no[str(i.id)] = cnt\n    cnt = cnt + 1\nendfor\n%>\n\n<%\nstate_no = {}\ncnt = 1\n%>\n% for i in root.state:\n#define c${root.id}_STATE_${i.id} ${cnt}\n<% state_no[str(i.id)] = cnt %>\\\n<% cnt = cnt + 1 %>\\\n%endfor\n\n\n\n\n#define c${root.id}_STATE_IGNORE -1\n\nclass c_${root.id} : public StateMachine {\n public:\n c_${root.id}();\n ~c_${root.id}();\n int execute(int event);\n};\n\n#endif', 10),
(74, 'Makefile', '', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.statediagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak\n', 10),
(75, 'Makefile.mako', '', '# Makefile\n#include Makefile.in\n\n# It needs to define this macro to use TOPPERS/JSP\nTOPPERS_KERNEL = NXT_JSP\n\n# Target specific macros\nTARGET = mdlnxtproj\nBUILD_MODE=ROM_ONLY\n\n# C++(.cpp) source files\nTARGET_CPP_SOURCES = \\\n main.cpp\\\n c_${root.classdiagram.id}.cpp\\\n\n# TOPPERS/JSP config file\nTOPPERS_JSP_CFG_SOURCE = ./mdlnxtproj.cfg\n\n# don''t change this macro\nO_PATH ?= build\n\n# makefile for C++(.cpp) build\ninclude ../../ecrobot/ecrobot++.mak', 10),
(76, 'EventManager.h', '', '#ifndef _EVENTMANAGER_H_\n#define _EVENTMANAGER_H_\n#include"StateMachine.h"\n#include "main.h"\n\nclass Event {\npublic:\nint event_id;\nEvent *next;\nEvent(int id) {\n event_id = id;\n}\n};\n\nclass EventManager {\n private:\n\n Event *head;\n Event *deq()\n {\n if(head == NULL) return NULL;\n Event *p = head;\n head = p->next;\n p->next = NULL;\n return p;\n }\n void enq(Event *new_e) {\n if(head == NULL) {\n head = new_e;\n head->next = NULL;\n }else{\n Event *e = head;\n while(e->next != NULL){\n e->next = new_e;\n e->next->next = NULL;\n }\n \n }\n }\n int stm_len;\n StateMachine *stms[16];\n public:\n EventManager() {\n stm_len = 0;\n head = NULL;\n }\n void addSTM(StateMachine *stm) {\n stms[stm_len] = stm;\n stm_len++;\n }\n\n void sendEvent(int event_id) {\n Event *e = new Event(event_id);\n enq(e);\n }\n\n void execute() {\n int ret_code = 0;\n while(ret_code == 0) {\n Event *e = deq();\n if(e != NULL) {\n for(int i=0;i < stm_len;i++) {\n ret_code = stms[i]->execute(e->event_id);\n }\n }else{\n clock_wait(20);\n }\n }\n }\n};\n\nextern EventManager eventManager;\n#endif\n', 10),
(77, 'StateMachine.h', '', '#ifndef _STATEMACHINE_H_\n#define _STATEMACHINE_H_\n\nclass StateMachine {\n private:\nprotected:\n int current_state;\n public:\n StateMachine(){}\n ~StateMachine(){}\n virtual int execute(int event) = 0;\n};\n\n#endif\n', 10);
INSERT INTO `Template` (`id`, `name`, `path`, `content`, `metamodel_id`) VALUES
(78, 'main.cpp', '', '#include \n#include \n#include \n#include \n#include \n#include \n#include \n#include \n\n//system\n#include "main.h"\n#include "EventManager.h"\n\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ é–‹å§‹\n********************/\n\n//ã‚¨ãƒ³ãƒˆãƒªãƒ¼ãƒã‚¤ãƒ³ãƒˆã¨ãªã‚‹ã‚¯ãƒ©ã‚¹ã‚’æŒ‡å®š\n#define mdlEntryPoint Controller\n\n//#define CALIBRATION_MODE\n\n/********************\n å¤‰æ›´ã‚’åŠ ãˆã‚‹å ´æ‰€ã€€çµ‚äº†\n********************/\n\n\nusing namespace ecrobot;\n\n\n\nextern "C"\n{\n#include "kernel.h"\n#include "kernel_id.h"\n#include "ecrobot_interface.h"\n\n/*\n ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆå§‹ã¾ã‚Šï¼‰\n*/\nTouchSensor touch1(PORT_1);\nTouchSensor touch2(PORT_2);\nLightSensor light(PORT_3);\nSonarSensor sonar(PORT_4);\n\nMotor motorA(PORT_A);\nMotor motorC(PORT_C);\nLegoLight legolight(PORT_B);\nNxt nxt;\nClock clock1;\nLcd lcd;\n\n\n/*\n ãƒãƒ¼ãƒ‰ã‚¦ã‚§ã‚¢æ§‹æˆã«é–¢ã™ã‚‹éƒ¨åˆ†ï¼ˆçµ‚ã‚ã‚Šï¼‰\n*/\n\nEventManager eventManager;\n\n/*\n action\n*/\nvoid sys_stop() {\n motorA.setPWM(0);\n motorC.setPWM(0);\n}\n\nvoid sys_go() {\n motorA.setPWM(50);\n motorC.setPWM(50);\n}\n\nvoid sys_right() {\n motorA.setPWM(50);\n motorC.setPWM(0);\n}\n\nvoid sys_left() {\n motorA.setPWM(0);\n motorC.setPWM(50);\n}\n\nvoid sys_() {\n // dummy function\n}\n\nvoid print(char *s) {\n lcd.putf("s", s);\n}\n\nvoid clock_wait(int t) {\nclock1.wait(t);\n}\n\nvoid sys_userdefine1() {\neventManager.sendEvent(EVENT_userdefine1);\n}\n\nvoid sys_userdefine2() {\neventManager.sendEvent(EVENT_userdefine2);\n}\n\n/*\n event\n*/\nvoid generate_external_LightWhite() {\neventManager.sendEvent(EVENT_white);\n}\n\nvoid generate_external_LightBlack() {\neventManager.sendEvent(EVENT_black);\n}\n\nvoid generate_external_TouchPress() {\neventManager.sendEvent(EVENT_touch);\n}\n\n\n/*\nDeclareCounter(SysTimerCnt);\nDeclareTask(TaskMain);\nDeclareTask(TaskEvent);\nDeclareAlarm(cyclic_alarm1);\nDeclareEvent(EventSleep);\nDeclareEvent(EventSleepI2C);\n*/\n\n/* nxtOSEK hook to be invoked from an ISR in category 2 */\n/*void user_1ms_isr_type2(void)\n{\n (void)SignalCounter(SysTimerCnt); // Alarm counter\n SleeperMonitor(); // needed for I2C device and Clock classes\n}\n*/\nvoid jsp_systick_low_priority(void)\n{\n if (get_OS_flag()) /* check whether JSP already started or not */\n {\n isig_tim(); /* cyclic task dispatcher */\n check_NXT_buttons();\n }\n}\n\n \nvoid cyc0(VP_INT exinf)\n{\n iact_tsk(TSK1);\n}\n\n \n\n \nint sonacnt;\n\n\nvoid TaskMain(VP_INT exinf)\n{\n lcd.clear();\n StateMachine *stm = new STATE_CLASS();\n eventManager.addSTM(stm);\n eventManager.sendEvent(EVENT_none);\n\n sonacnt = 0;\n while(true)\n {\n eventManager.execute();\n }\n ext_tsk();\n}\n\n#define WHITE 580\n#define GRAY 480\n#define GRAY_MAX (GRAY + 8)\n#define GRAY_MIN (GRAY - 8)\n#define BLACK 320\n#define EDGE_COLOR ((GRAY + WHITE) / 2)\n\n#define LIGHT_STATUS_BLACK 0\n#define LIGHT_STATUS_GRAY 1\n#define LIGHT_STATUS_WHITE 2\nint prev_light_status = LIGHT_STATUS_GRAY;\n\n#define TOUCH_STATUS_NOT_PRESS 0\n#define TOUCH_STATUS_PRESS 1\nint prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n \n#define TOUCH_STATUS_NOT_PRESS_2 0\n#define TOUCH_STATUS_PRESS_2 1\nint prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n\n#define SONAR_STATUS_SMALL_10 0\n#define SONAR_STATUS_NOT_SMALL_10 1\nint prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n\n#ifdef CALIBRATION_MODE\n\nvoid TaskEvent(VP_INT exinf)\n{\n lcd.clear();\n lcd.putf("s", "lig=");\n S16 n = light.getBrightness();\n lcd.putf("d", n);\n lcd.disp();\n// TerminateTask();\n ext_tsk();\n}\n\n#else\n\n\nint gray_count = 0;\n\nvoid TaskEvent(VP_INT exinf)\n{\n S16 value = light.getBrightness();\n\n if(GRAY_MIN < value && value < GRAY_MAX){\n gray_count++;\n if(gray_count > 15) {\n gray_count = 0;\n// generate_external_GrayMarker(NULL);\n lcd.putf("s", "GrayMarker\\n");\n// lightOn();\n }\n }\n\n if(value > EDGE_COLOR)\n {\n if(prev_light_status != LIGHT_STATUS_WHITE)\n {\n //generate signal\n generate_external_LightWhite();\n// lcd.putf("s", "LightWhite\\n");\n }\n prev_light_status = LIGHT_STATUS_WHITE;\n }\n else if(value=EDGE_COLOR)\n {\n if(prev_light_status != LIGHT_STATUS_BLACK)\n {\n //generate signal\n generate_external_LightBlack();\n// lcd.putf("s", "LightBlack\\n");\n }\n prev_light_status = LIGHT_STATUS_BLACK;\n }\n else\n {\n prev_light_status = LIGHT_STATUS_GRAY;\n }\n\n if(touch1.isPressed())\n {\n/// lcd.putf("s", "press");\n if(prev_touch_status != TOUCH_STATUS_PRESS)\n {\n generate_external_TouchPress();\n lcd.putf("s", "TouchPress\\n");\n }\n prev_touch_status = TOUCH_STATUS_PRESS;\n }\n else\n {\n// lcd.putf("s", "not press");\n if(prev_touch_status != TOUCH_STATUS_NOT_PRESS)\n {\n// generate_external_TouchNotPress(NULL);\n }\n prev_touch_status = TOUCH_STATUS_NOT_PRESS;\n }\n\n if(touch2.isPressed())\n {\n/// lcd.putf("s", "press");\n if(prev_touch_status_2 != TOUCH_STATUS_PRESS_2)\n {\n// generate_external_TouchPress2(NULL);\n lcd.putf("s", "TouchPress2\\n");\n }\n prev_touch_status_2 = TOUCH_STATUS_PRESS_2;\n }\n else\n {\n// lcd.putf("s", "not press");\n if(prev_touch_status_2 != TOUCH_STATUS_NOT_PRESS_2)\n {\n// generate_external_TouchNotPress2(NULL);\n }\n prev_touch_status_2 = TOUCH_STATUS_NOT_PRESS_2;\n }\n \n sonacnt++;\n if(10 < sonacnt)\n {\n sonacnt = 0;\n if(sonar.getDistance() < 10)\n {\n if(prev_sonar_status != SONAR_STATUS_SMALL_10)\n {\n// generate_external_Sonar(NULL);\n lcd.putf("s", "Sonar\\n");\n }\n prev_sonar_status = SONAR_STATUS_SMALL_10;\n }\n else\n {\n if(prev_sonar_status != SONAR_STATUS_NOT_SMALL_10)\n {\n// generate_external_NotSonar(NULL);\n }\n prev_sonar_status = SONAR_STATUS_NOT_SMALL_10;\n\n }\n }\n\n lcd.disp();\n// clock1.wait(100);\n// }\n// TerminateTask();\n ext_tsk();\n\n}\n\n#endif\n\n}\n', 10);

-- --------------------------------------------------------

--
-- テーブルの構造 `UserInfo`
--

DROP TABLE IF EXISTS `UserInfo`;
CREATE TABLE IF NOT EXISTS `UserInfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uname` varchar(32) NOT NULL,
  `passwd` varchar(32) NOT NULL,
  `register_date` date NOT NULL,
  `email` varchar(255) NOT NULL,
  `role` int(1) NOT NULL DEFAULT '0',
  `belonging` tinytext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=13 ;

--
-- テーブルのデータをダンプしています `UserInfo`
--

INSERT INTO `UserInfo` (`id`, `uname`, `passwd`, `register_date`, `email`, `role`, `belonging`) VALUES
(1, 'clooca', 'a8ed147206bd6df12f9bdee5e5f2d4f1', '2012-03-11', '', 1, ''),
(2, 'user', '7d9a0d11cb36e12a68817aff945390de', '2012-03-14', '', 0, ''),
(3, 'user2', '7d9a0d11cb36e12a68817aff945390de', '2012-03-17', '', 0, ''),
(7, 'test', '7d9a0d11cb36e12a68817aff945390de', '2012-04-18', '', 0, ''),
(8, 'clooca', 'a8ed147206bd6df12f9bdee5e5f2d4f1', '2012-04-19', '', 0, ''),
(9, 'syuhei', '7d9a0d11cb36e12a68817aff945390de', '2012-04-19', '', 0, ''),
(10, 'test2', '7d9a0d11cb36e12a68817aff945390de', '2012-04-21', '', 0, ''),
(11, 'test_admin1', '16802231b09f155b7a42a5dcaba33a74', '2012-04-26', '', 0, ''),
(12, 'test_user1', '16802231b09f155b7a42a5dcaba33a74', '2012-04-26', '', 0, '');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
